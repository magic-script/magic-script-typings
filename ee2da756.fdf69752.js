(window.webpackJsonp=window.webpackJsonp||[]).push([[627],{422:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return i}));n(58),n(31),n(22),n(23),n(59),n(0);var a=n(812);function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={id:"_lumin_.audionode",title:"AudioNode",sidebar_label:"AudioNode"},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Methods",id:"methods",children:[{value:"addChild",id:"addchild",children:[]},{value:"addMoveCallback",id:"addmovecallback",children:[]},{value:"addResource",id:"addresource",children:[]},{value:"addToLayer",id:"addtolayer",children:[]},{value:"createSoundWithLoadedFile",id:"createsoundwithloadedfile",children:[]},{value:"createSoundWithStreamedFile",id:"createsoundwithstreamedfile",children:[]},{value:"createSoundWithSystemEnum",id:"createsoundwithsystemenum",children:[]},{value:"createWithSound",id:"createwithsound",children:[]},{value:"delayMove",id:"delaymove",children:[]},{value:"findChild",id:"findchild",children:[]},{value:"findChildren",id:"findchildren",children:[]},{value:"findParent",id:"findparent",children:[]},{value:"getAABB",id:"getaabb",children:[]},{value:"getAnchorPosition",id:"getanchorposition",children:[]},{value:"getChild",id:"getchild",children:[]},{value:"getChildCount",id:"getchildcount",children:[]},{value:"getCurrentPrismTransform",id:"getcurrentprismtransform",children:[]},{value:"getCurrentWorldTransform",id:"getcurrentworldtransform",children:[]},{value:"getCursorHoverState",id:"getcursorhoverstate",children:[]},{value:"getLocalAABB",id:"getlocalaabb",children:[]},{value:"getLocalPosition",id:"getlocalposition",children:[]},{value:"getLocalRotation",id:"getlocalrotation",children:[]},{value:"getLocalScale",id:"getlocalscale",children:[]},{value:"getLocalTransform",id:"getlocaltransform",children:[]},{value:"getName",id:"getname",children:[]},{value:"getNodeId",id:"getnodeid",children:[]},{value:"getNumResources",id:"getnumresources",children:[]},{value:"getParent",id:"getparent",children:[]},{value:"getParentedBoneName",id:"getparentedbonename",children:[]},{value:"getPrismId",id:"getprismid",children:[]},{value:"getPrismPosition",id:"getprismposition",children:[]},{value:"getResources",id:"getresources",children:[]},{value:"getRigidBody",id:"getrigidbody",children:[]},{value:"getRoot",id:"getroot",children:[]},{value:"getSoundPitch",id:"getsoundpitch",children:[]},{value:"getSoundState",id:"getsoundstate",children:[]},{value:"getSoundVolumeLinear",id:"getsoundvolumelinear",children:[]},{value:"getSpatialSoundDirectSendLevels",id:"getspatialsounddirectsendlevels",children:[]},{value:"getSpatialSoundDirection",id:"getspatialsounddirection",children:[]},{value:"getSpatialSoundDistanceProperties",id:"getspatialsounddistanceproperties",children:[]},{value:"getSpatialSoundEnable",id:"getspatialsoundenable",children:[]},{value:"getSpatialSoundPosition",id:"getspatialsoundposition",children:[]},{value:"getSpatialSoundRadiationProperties",id:"getspatialsoundradiationproperties",children:[]},{value:"getSpatialSoundRoomSendLevels",id:"getspatialsoundroomsendlevels",children:[]},{value:"getStreamedFileOffset",id:"getstreamedfileoffset",children:[]},{value:"getWorldPosition",id:"getworldposition",children:[]},{value:"isInLayer",id:"isinlayer",children:[]},{value:"isInSubtree",id:"isinsubtree",children:[]},{value:"isSkipRaycast",id:"isskipraycast",children:[]},{value:"isSoundLooping",id:"issoundlooping",children:[]},{value:"isSoundMuted",id:"issoundmuted",children:[]},{value:"isTriggerable",id:"istriggerable",children:[]},{value:"isVisibilityInherited",id:"isvisibilityinherited",children:[]},{value:"isVisible",id:"isvisible",children:[]},{value:"isVisibleInPrism",id:"isvisibleinprism",children:[]},{value:"pauseSound",id:"pausesound",children:[]},{value:"playSystemSound",id:"playsystemsound",children:[]},{value:"releaseOutputStreamBuffer",id:"releaseoutputstreambuffer",children:[]},{value:"removeChild",id:"removechild",children:[]},{value:"removeFromLayer",id:"removefromlayer",children:[]},{value:"removeResource",id:"removeresource",children:[]},{value:"replaceResource",id:"replaceresource",children:[]},{value:"resumeSound",id:"resumesound",children:[]},{value:"setAnchorPosition",id:"setanchorposition",children:[]},{value:"setCursorHoverState",id:"setcursorhoverstate",children:[]},{value:"setLocalPosition",id:"setlocalposition",children:[]},{value:"setLocalRotation",id:"setlocalrotation",children:[]},{value:"setLocalScale",id:"setlocalscale",children:[]},{value:"setLocalTransform",id:"setlocaltransform",children:[]},{value:"setName",id:"setname",children:[]},{value:"setParentedBoneName",id:"setparentedbonename",children:[]},{value:"setSkipRaycast",id:"setskipraycast",children:[]},{value:"setSoundLooping",id:"setsoundlooping",children:[]},{value:"setSoundMute",id:"setsoundmute",children:[]},{value:"setSoundPitch",id:"setsoundpitch",children:[]},{value:"setSoundProperties",id:"setsoundproperties",children:[]},{value:"setSoundVolumeLinear",id:"setsoundvolumelinear",children:[]},{value:"setSpatialSoundDirectSendLevels",id:"setspatialsounddirectsendlevels",children:[]},{value:"setSpatialSoundDirection",id:"setspatialsounddirection",children:[]},{value:"setSpatialSoundDistanceProperties",id:"setspatialsounddistanceproperties",children:[]},{value:"setSpatialSoundEnable",id:"setspatialsoundenable",children:[]},{value:"setSpatialSoundPosition",id:"setspatialsoundposition",children:[]},{value:"setSpatialSoundRadiationProperties",id:"setspatialsoundradiationproperties",children:[]},{value:"setSpatialSoundRoomSendLevels",id:"setspatialsoundroomsendlevels",children:[]},{value:"setStreamedFileOffset",id:"setstreamedfileoffset",children:[]},{value:"setTriggerable",id:"settriggerable",children:[]},{value:"setVisibilityInherited",id:"setvisibilityinherited",children:[]},{value:"setVisible",id:"setvisible",children:[]},{value:"startInput",id:"startinput",children:[]},{value:"startSound",id:"startsound",children:[]},{value:"stopInput",id:"stopinput",children:[]},{value:"stopSound",id:"stopsound",children:[]},{value:"stopTransformAnimations",id:"stoptransformanimations",children:[]},{value:"Static Delete",id:"static-delete",children:[]},{value:"Static ReleaseInputBuffer",id:"static-releaseinputbuffer",children:[]},{value:"Static playSound",id:"static-playsound",children:[]}]}],o={rightToc:l},c="wrapper";function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,b={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,["components"]);return Object(a.b)(c,b({},o,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(a.b)("p",null,"  \u21b3 ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode")),Object(a.b)("p",null,"  \u21b3 ",Object(a.b)("strong",{parentName:"p"},"AudioNode")),Object(a.b)("h2",{id:"methods"},"Methods"),Object(a.b)("h3",{id:"addchild"},"addChild"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"addChild"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_pChild"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#addchild"}),"addChild"))),Object(a.b)("p",null,"Adds a child to the current Node, removing it from its current parent."),Object(a.b)("p",null,"A child can only have a single Parent"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_pChild")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The Node to add as a child to this Node.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if successful, false if failed"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"addmovecallback"},"addMoveCallback"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"addMoveCallback"),"(",Object(a.b)("inlineCode",{parentName:"p"},"track?"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#addmovecallback"}),"addMoveCallback"))),Object(a.b)("p",null,"Adds a client-side callback event to the move list. When the event is reached during the\nanimation playback, the ServerEventCallback function set in Client will be called\nwith an event TransformAnimationEventData."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"track?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"addresource"},"addResource"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"addResource"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resourceID"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"AudioNode can have multiple AudioResource(s) associated with it.\nThe first resource is associated when AudioNode is initialized by calling\ncreateSoundWithLoadefFile or createSoundWithStreamedFile API.\nThis addResource API may be called to add(associate) more resources. However, it must be\ncalled after initializing the AudioNode with the above mentioned createSoundWithXxxx APIs."),Object(a.b)("p",null,'Note that the same resource type must be used when adding additional resources as the one used in\ncreateSoundWithXxxx API\nExample:\nAudioNode->createSoundWithLoadedFile( loadedFileResourceID_1 ); // Node initialized with "loaded file" type resource.\nAudioNode->addResource( loadedFileResourceID_2 ); // OK - adding "loaded file" resource\nAudioNode->addResource( streamedFileResourceID_3 ); // ERROR - adding "streamed  file" resource\n...\nLater, when startSound() API is called, it will play any one randomly picked resource sound.'),Object(a.b)("p",null,"Some use cases:\nExample 1:\nUsing just one AudioNode, an alternative to having multiple AudioNodes for different sounds\nplaying from the same position(and orientation) but not at the same time(not overlapped).\nJust add (associate) multiple resources using this addResource(resID_n) API and call startSound(resID_n)\ndifferent times with different resource IDs to play.\nNOTE: Intentionally not adding resource if not already added when startSound(resId_n)\nis called. This, is to avoid accidentally or easily associating too many resources\nwhich, has performance implications."),Object(a.b)("p",null,"Example 2:\nRandomly playing different sound(from set of already added resources) each time startSound() is called.\nThis can be used to repeated sounds with slight variations for realism like, footsteps, breathing,\nbullets, etc.. In this case, associate slightly varying audio resources with the same AudioNode and call\naudioNode->statrtSound() with no arguments. It will play one randomly picked resource each time\nstartSound() is called."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resourceID")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Additional AudioResource ID to be associated with this AudioNode.                     Calling addResource on same resource again is okay. The resource is added(associated)                     only the first time.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"true, if successful added or already associated.\nfalse, if the type of resource is not the same type of resource (LoadedFile\nor StreamedFile) as the one when AudioNode was initialized with the resource using\ncreateSoundWithXxxx API.")),Object(a.b)("p",null,"NOTE: Associating many resources to one AudioNode will result in slight performance penalty.\nSo, only associate multiple resources if necessary(eg. playing random sounds) and\ndo not add resources to AudioNode which will be never used or used only once. If the resource\nis not going to be used any more, remove the association using removeResource() API."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"addtolayer"},"addToLayer"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"addToLayer"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_layer"),": bigint): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#addtolayer"}),"addToLayer"))),Object(a.b)("p",null,"Adds this node to the specified node layer.  Nodes can be members of multiple layers."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_layer")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"createsoundwithloadedfile"},"createSoundWithLoadedFile"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"createSoundWithLoadedFile"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resourceID"),": bigint, ",Object(a.b)("inlineCode",{parentName:"p"},"autoDestroy?"),": boolean, ",Object(a.b)("inlineCode",{parentName:"p"},"dynamicDecode?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Initializes the AudioNode for using the already loaded resource(keyed on resource ID)\nAssociates audio resource id with AudioNode.\nAlso, sets resource related properties."),Object(a.b)("p",null,"NOTE: Must be called only once to set the AudioNode's behavior in terms of it's sound resource(s)."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resourceID")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"ID of the audio resource which is already created.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"autoDestroy?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," - If true, play the sound once and  delete the node. If false the audio                      node will stay until scenegraph is destroyed.                      It is good practice to remove the unused node sooner than later after                      it's not required.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"dynamicDecode?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," - true = The file resource is compressed and will be decoded when playing.                        false = The file\\resource is an uncompressed PCM data.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"bool - Returns true on success else, returns false."),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"createSoundWithLoadedFile"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resourceIDs"),": Array\u2039bigint\u203a, ",Object(a.b)("inlineCode",{parentName:"p"},"autoDestroy?"),": boolean, ",Object(a.b)("inlineCode",{parentName:"p"},"dynamicDecode?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"An overload of createSoundWithLoadedFile with a vector of resource IDs.\nSee the comments for single resource Id overload.\nThis API will associate all the resource IDs in the vector with the AudioNode."),Object(a.b)("p",null,"NOTE: Must be called only once to set the AudioNode's behavior in terms of it's sound resource(s)."),Object(a.b)("p",null,"PERFORMANCE: Associating many resources to one AudioNode will result in slight performance penalty.\nSo, only associate multiple resources if necessary(eg. playing random sounds) and\ndo not add resources to AudioNode which will be never used or used only once. If the resource\nis not going to be used any more, remove the association using removeResource() API."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resourceIDs")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Array\u2039bigint\u203a")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"autoDestroy?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"dynamicDecode?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"createsoundwithstreamedfile"},"createSoundWithStreamedFile"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"createSoundWithStreamedFile"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resourceID"),": bigint, ",Object(a.b)("inlineCode",{parentName:"p"},"autoDestroy?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Initializes the AudioNode for loading the audio file chunk at a time in memory.\nAssociates audio resource(file) with audio node. Also, sets resource related properties."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resourceID")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"resource id of sound resource")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"autoDestroy?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," - If true, play the sound once and  delete the node. If false the audio node will                      stay until scenegraph is destroyed.                      It is good practice to remove the unused node sooner than later after it's not                      required.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"bool - Returns true on success else, returns false."),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"createSoundWithStreamedFile"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resourceIDs"),": Array\u2039bigint\u203a, ",Object(a.b)("inlineCode",{parentName:"p"},"autoDestroy?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"An overload of createSoundWithStreamedFile with a vector of resource IDs.\nSee the comments for single resource Id overload.\nThis API will associate all the resource IDs in the vector with the AudioNode."),Object(a.b)("p",null,"NOTE: Must be called only once to set the AudioNode's behavior in terms of it's sound resource(s)."),Object(a.b)("p",null,"PERFORMANCE: Associating many resources to one AudioNode will result in slight performance penalty.\nSo, only associate multiple resources if necessary(eg. playing random sounds) and\ndo not add resources to AudioNode which will be never used or used only once. If the resource\nis not going to be used any more, remove the association using removeResource() API."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resourceIDs")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Array\u2039bigint\u203a")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"autoDestroy?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"createsoundwithsystemenum"},"createSoundWithSystemEnum"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"createSoundWithSystemEnum"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Sets the AudioNode for playing the predefined system sounds using the\nAudioSytemSound enums."),Object(a.b)("p",null,"NOTE: Must be called only once to set the AudioNode's behavior in terms of it's sound resource(s)."),Object(a.b)("p",null,"1) The node can be the child of some visible node to perceive the sounds\ndirection coming from that visual artifact\\model's location.\n-- OR --\n2) The node may be the child of RootNode and set the\naudioNode->setLocalPosition(x,y,z) to perceive the sounds direction coming\nfrom the arbitrary location specified by x,y,z"),Object(a.b)("p",null,"Call audionode->playSystemSound(SystemSoundEnum sysSound); to play\nthe specified system sound from the location specified by #1 or #2 method."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"createwithsound"},"createWithSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"createWithSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"sound"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.sound"}),"Sound"),", ",Object(a.b)("inlineCode",{parentName:"p"},"autoDestroy?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Creates the AudioNode using the properties set in Sound object.\nThe Sound object reads it's properties from an XML Sound Model file.\nXML Sound Model which, contains AudioNode's properties are created for\nvarious purposes for example, internally, SystemSoundModel.xml is used to define\neach system sound's properties."),Object(a.b)("p",null,"NOTE: Must be called only once to set the AudioNode's behavior in terms of it's sound resource(s)."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.sound"}),"Sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"A Sound object to apply it's properties to this AudioNode.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"autoDestroy?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," Default is false and currently ignored.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"delaymove"},"delayMove"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"delayMove"),"(",Object(a.b)("inlineCode",{parentName:"p"},"durationSecs"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"track?"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#delaymove"}),"delayMove"))),Object(a.b)("p",null,"Adds a delay to the current move sequence."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"durationSecs")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"How long to delay, in seconds.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"track?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = 0"),Object(a.b)("br",null)," which animation track to add the delay to.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"findchild"},"findChild"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"findChild"),"(",Object(a.b)("inlineCode",{parentName:"p"},"name"),": string): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#findchild"}),"findChild"))),Object(a.b)("p",null,"Find the first named child in the node hierarchy, including this Node."),Object(a.b)("p",null,"Does a breadth-first search of the child node hierarchy\nfor the specified named Node and will return the first encountered match,\nor nullptr if no named Node found."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"name")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The name to search for.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("hr",null),Object(a.b)("h3",{id:"findchildren"},"findChildren"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"findChildren"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_type"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"a_bExactType?"),": boolean, ",Object(a.b)("inlineCode",{parentName:"p"},"a_bIncludeSelf?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"Array\u2039",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),"\u203a")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#findchildren"}),"findChildren"))),Object(a.b)("p",null,"Does a breadth-first search of the child node hierarchy\nfor the specified Node type."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The type of Node to find in the child hierarchy.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_bExactType?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," Flag to indicate if the child node must be the exact type or can be derived from the type (default false).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_bIncludeSelf?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," Flag to indicate if the search should include this Node (default false).")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"Array\u2039",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),"\u203a")),Object(a.b)("p",null,"A vector of Node pointers containing the results."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"findparent"},"findParent"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"findParent"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_type"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"a_bExactType?"),": boolean): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#findparent"}),"findParent"))),Object(a.b)("p",null,"Searches up the tree parentage for the specific Node type."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The type of Node to find in the parent hierarchy.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_bExactType?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," Flag to indicate if the parent node must be the exact type or can be derived from the type (default false).")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,"The parent node, if found, null if not found."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getaabb"},"getAABB"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getAABB"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getaabb"}),"getAABB"))),Object(a.b)("p",null,"Get the AABB of this Node's full hierarchy, including all descendants,\nwith all Node transforms applied."),Object(a.b)("p",null,"The returned AABB encompasses this Node and all descendant Nodes\nand is aligned to the coordinate system the Node resides within,\ni.e. the Node's parent coordinate system.\nNote, the returned AABB is not guaranteed to be the minimal,\ntightest fitting AABB to encompass the Node's descendant hierarchy,\nbut it will fully enlose the Node's hierarchy."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(a.b)("p",null,"The bounding box"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getanchorposition"},"getAnchorPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getAnchorPosition"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getanchorposition"}),"getAnchorPosition"))),Object(a.b)("p",null,"Returns the anchor position of the node."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"The anchor position."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getchild"},"getChild"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getChild"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_iIndex"),": number): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getchild"}),"getChild"))),Object(a.b)("p",null,"Gets the n'th child from this Node's children"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_iIndex")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The index of the child.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,"Child Node"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getchildcount"},"getChildCount"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getChildCount"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getchildcount"}),"getChildCount"))),Object(a.b)("p",null,"Gets the number of immediate children this Node has"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Count of immediate child Nodes"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getcurrentprismtransform"},"getCurrentPrismTransform"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getCurrentPrismTransform"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getcurrentprismtransform"}),"getCurrentPrismTransform"))),Object(a.b)("p",null,"Get the Cached Prism Transform of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(a.b)("p",null,"Transform Matrix"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getcurrentworldtransform"},"getCurrentWorldTransform"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getCurrentWorldTransform"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getcurrentworldtransform"}),"getCurrentWorldTransform"))),Object(a.b)("p",null,"Get the Cached World Transform of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(a.b)("p",null,"Transform Matrix"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getcursorhoverstate"},"getCursorHoverState"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getCursorHoverState"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getcursorhoverstate"}),"getCursorHoverState"))),Object(a.b)("p",null,"Get the cursor hover state for this Node."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState"))),Object(a.b)("p",null,"the cursor state."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlocalaabb"},"getLocalAABB"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLocalAABB"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getlocalaabb"}),"getLocalAABB"))),Object(a.b)("p",null,"Get the local AABB of this Node only, not including children,\naligned to this Node's local coordinate system."),Object(a.b)("p",null,"A local AABB of math::AABB::EMPTY indicates the Node either\nhas no visual information or that local AABB is not supported\nfor the Node."),Object(a.b)("p",null,"Note:  The local AABB for ModelNodes is currently not supported\nand will report math::AABB::EMPTY."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(a.b)("p",null,"The bounding box."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlocalposition"},"getLocalPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLocalPosition"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#getlocalposition"}),"getLocalPosition"))),Object(a.b)("p",null,"Get the Local Position of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Position"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlocalrotation"},"getLocalRotation"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLocalRotation"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#getlocalrotation"}),"getLocalRotation"))),Object(a.b)("p",null,"Get the Local Rotation of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number]")),Object(a.b)("p",null,"Rotation"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlocalscale"},"getLocalScale"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLocalScale"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#getlocalscale"}),"getLocalScale"))),Object(a.b)("p",null,"Get the Local Scale of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Scale"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlocaltransform"},"getLocalTransform"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLocalTransform"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getlocaltransform"}),"getLocalTransform"))),Object(a.b)("p",null,"Get the Local Transform of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(a.b)("p",null,"Transform Matrix"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getname"},"getName"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getName"),"(): ",Object(a.b)("em",{parentName:"p"},"string")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getname"}),"getName"))),Object(a.b)("p",null,"Get the name of the Node."),Object(a.b)("p",null,"This call returns EMPTY_STRING if the Node's\nname has not been set."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"string")),Object(a.b)("p",null,"The name of the Node, if set."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getnodeid"},"getNodeId"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getNodeId"),"(): ",Object(a.b)("em",{parentName:"p"},"bigint")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getnodeid"}),"getNodeId"))),Object(a.b)("p",null,"Gets the Node Id of this Node"),Object(a.b)("p",null,"Every Node is assigned a unique ID per Prism"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"bigint")),Object(a.b)("p",null,"Node id of the current Node"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getnumresources"},"getNumResources"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getNumResources"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Gets total number of resources associated with this AudioNode."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Number of resources."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getparent"},"getParent"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getParent"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getparent"}),"getParent"))),Object(a.b)("p",null,"Gets this Node's immediate parent"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,"Parent Node, nullptr = no parent"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getparentedbonename"},"getParentedBoneName"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getParentedBoneName"),"(): ",Object(a.b)("em",{parentName:"p"},"string")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getparentedbonename"}),"getParentedBoneName"))),Object(a.b)("p",null,"When parented to a parents bone with setParentedBoneName"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"string")),Object(a.b)("p",null,"Parents bone name we are attached to"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getprismid"},"getPrismId"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getPrismId"),"(): ",Object(a.b)("em",{parentName:"p"},"bigint")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getprismid"}),"getPrismId"))),Object(a.b)("p",null,"Returns the id of the prism the node belongs to."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"bigint")),Object(a.b)("p",null,"the prism id (0 = invalid prism)"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getprismposition"},"getPrismPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getPrismPosition"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#getprismposition"}),"getPrismPosition"))),Object(a.b)("p",null,"Get the Prism Position of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Position"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getresources"},"getResources"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getResources"),"(): ",Object(a.b)("em",{parentName:"p"},"Array\u2039bigint\u203a")),Object(a.b)("p",null,"Gets the list of already associated resource IDs"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"Array\u2039bigint\u203a")),Object(a.b)("p",null,"std::vector of already associated resources."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getrigidbody"},"getRigidBody"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getRigidBody"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.physicsrigidbody"}),"PhysicsRigidBody"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#getrigidbody"}),"getRigidBody"))),Object(a.b)("p",null,"Returns the PhysicsRigidBody attached to the node, if the node is participating in the physics\nsystem."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.physicsrigidbody"}),"PhysicsRigidBody"))),Object(a.b)("p",null,"the rigid body"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getroot"},"getRoot"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getRoot"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.rootnode"}),"RootNode"))),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#getroot"}),"getRoot"))),Object(a.b)("p",null,"Gets the root node of the node tree this node belongs to."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.rootnode"}),"RootNode"))),Object(a.b)("p",null,"The root node, or nullptr if none."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getsoundpitch"},"getSoundPitch"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSoundPitch"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Get sound pitch."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Reference to a float to output current value.")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getsoundstate"},"getSoundState"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSoundState"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/enums/_lumin_.audiostate"}),"AudioState"))),Object(a.b)("p",null,"Gets the current state of the audio, see enum AudioState."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/enums/_lumin_.audiostate"}),"AudioState"))),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Output parameter where the audio state will be stored.")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getsoundvolumelinear"},"getSoundVolumeLinear"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSoundVolumeLinear"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Gets the current audio volume."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Reference to a float to output current value.")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsounddirectsendlevels"},"getSpatialSoundDirectSendLevels"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundDirectSendLevels"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels"))),Object(a.b)("p",null,"Gets the direct send levels for one channel of a sound output."),Object(a.b)("p",null,"Multi-channel sounds require the direct send levels to be read\nindividually for each channel by calling this function once for each\nchannel. For mono sounds use channel = 0. For stereo sounds use\nchannel = 0 for left and channel = 1 for right."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"selects the channel whose direct send levels are being read")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels"))),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"SpatialSoundSendLevels struct to return the levels")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsounddirection"},"getSpatialSoundDirection"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundDirection"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number): ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number]")),Object(a.b)("p",null," Get sound direction of a given audio channel.\nDirection is relative to audio node's local orientation."),Object(a.b)("p",null," @param channel - Channel index(zero based).\n@return - A quaternion (glm::quat) which gets populated by direction\nof the sound for the given channel."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number, number]")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsounddistanceproperties"},"getSpatialSoundDistanceProperties"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundDistanceProperties"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsounddistanceproperties"}),"SpatialSoundDistanceProperties"))),Object(a.b)("p",null," Get spatial sound distance parameters for a given channel."),Object(a.b)("p",null," @param channel - Channel index(zero based).\n@return - Reference to distance properties struct.\nSee struct SpatialSoundDistanceProperties"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsounddistanceproperties"}),"SpatialSoundDistanceProperties"))),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsoundenable"},"getSpatialSoundEnable"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundEnable"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Query if spatial sound is enabled or disabled."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"true, Enabled\nfalse, Disabled")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsoundposition"},"getSpatialSoundPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundPosition"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null," Get position of the given audio channel. Position is relative to audio node's\nlocal position."),Object(a.b)("p",null," @param channel - Channel index(zero based).\n@return - A glm::vec3 which gets populated by the offset\nof channels position."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsoundradiationproperties"},"getSpatialSoundRadiationProperties"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundRadiationProperties"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsoundradiationproperties"}),"SpatialSoundRadiationProperties"))),Object(a.b)("p",null," Get spatial sound radiation parameters for a given channel."),Object(a.b)("p",null," @param channel - Channel index(zero based).\n@return - Reference to radiation properties struct.\nSee struct SpatialSoundRadiationProperties"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsoundradiationproperties"}),"SpatialSoundRadiationProperties"))),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getspatialsoundroomsendlevels"},"getSpatialSoundRoomSendLevels"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSpatialSoundRoomSendLevels"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels"))),Object(a.b)("p",null,"Gets the room send levels for one channel of a sound output."),Object(a.b)("p",null,"Multi-channel sounds require the room send levels to be read\nindividually for each channel by calling this function once for each\nchannel. For mono sounds use channel = 0. For stereo sounds use\nchannel = 0 for left and channel = 1 for right."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"selects the channel whose room send levels are being read")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels"))),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"SpatialSoundSendLevels struct to return the levels")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getstreamedfileoffset"},"getStreamedFileOffset"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getStreamedFileOffset"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Gets the currently set starting point for playback of a streamed-file sound."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Reference to uint32_t to output the current value of offset.")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getworldposition"},"getWorldPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getWorldPosition"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#getworldposition"}),"getWorldPosition"))),Object(a.b)("p",null,"Get the World Position of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Position"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"isinlayer"},"isInLayer"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isInLayer"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_layer"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#isinlayer"}),"isInLayer"))),Object(a.b)("p",null,"Checks to see if node subscribes to the specified node layer."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_layer")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The layer to test if this node is a member of.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if this node subscribes to the specified layer."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"isinsubtree"},"isInSubtree"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isInSubtree"),"(",Object(a.b)("inlineCode",{parentName:"p"},"pParent"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#isinsubtree"}),"isInSubtree"))),Object(a.b)("p",null,"Determines if this Node is within the subtree."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"pParent")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node"))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if this Node is within the subtree, false if not."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"isskipraycast"},"isSkipRaycast"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isSkipRaycast"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#isskipraycast"}),"isSkipRaycast"))),Object(a.b)("p",null,"Returns the skip raycast state of the node."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the node is skipped during raycasting."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"issoundlooping"},"isSoundLooping"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isSoundLooping"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Queries if the sound is looping or not."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"true, if sound is looping.\nfalse, if not.")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"issoundmuted"},"isSoundMuted"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isSoundMuted"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Check if sound is muted or not."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Reference to a bool to output current value.\ntrue - muted\nfalse - not muted")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"istriggerable"},"isTriggerable"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isTriggerable"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#istriggerable"}),"isTriggerable"))),Object(a.b)("p",null,"Returns true if this node should handle trigger presses directly."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if this node will handle trigger presses directly when focused,\nfalse if trigger press will instead enter prism placement mode."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"isvisibilityinherited"},"isVisibilityInherited"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isVisibilityInherited"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#isvisibilityinherited"}),"isVisibilityInherited"))),Object(a.b)("p",null,"Returns whether this Node's visibility is inherited by its children or not."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the Node's visiblity is inherited."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"isvisible"},"isVisible"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isVisible"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#isvisible"}),"isVisible"))),Object(a.b)("p",null,"Returns the visibility state of the node. Note that only the local state is checked, the\neffect of a parent's visibility is ignored."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the Node is visible."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"isvisibleinprism"},"isVisibleInPrism"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isVisibleInPrism"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#isvisibleinprism"}),"isVisibleInPrism"))),Object(a.b)("p",null,"Returns the visibility of the Node in the hierarchy based on self visibility and any\npotential inherited visibility."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the Node is visible in the Prism."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"pausesound"},"pauseSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"pauseSound"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Pause the sound if already playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"playsystemsound"},"playSystemSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"playSystemSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"sysSound"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.systemsoundenum"}),"SystemSoundEnum"),"): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Plays the specified system sound.\nBy nature system sounds are expected to be of small duration like button_click etc...\nand are of fire-and-forget style, that is, cannot be stopped, paused and such.\nUsage:\ndialogBox_1->setLocalPosition(1.2, 0.0. -0.5);\ndialogBox_2->setLocalPosition(-0.7, 0.0. -0.5);\nAudioNode* audioNode =  prism->createAudioNode();\naudioNode->createSoundWithSystenEnum();"),Object(a.b)("p",null,"  // Upon some event or a particular iteration of update loop.\n// To play sound from dialogBox_1's location:\ndialogBox_1->addChild(audioNode);\naudioNode->playSystemSound(SystemSoundEnum::kClose);"),Object(a.b)("p",null,"  // Upon some other event or other iteration of update loop.\n// To play sound from dialogBox_2's location:\ndialogBox_2->addChild(audioNode);\naudioNode->playSystemSound(SystemSoundEnum::kClick);"),Object(a.b)("p",null,"  // Upon yet other event or yet another iteration of update loop:\n// To play the sound from arbitrary location:\nrootNode->addChild(audioNode);\naudioNode->setLocalPosition(x,y,z);\naudioNode->playSystemSound(SystemSoundEnum::kAlert);"),Object(a.b)("p",null,"  @param sysSound The system sound to be played."),Object(a.b)("p",null,"  @return Returns true if successful, else returns false."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"sysSound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.systemsoundenum"}),"SystemSoundEnum"))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"releaseoutputstreambuffer"},"releaseOutputStreamBuffer"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"releaseOutputStreamBuffer"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Lets the audio service know that the buffer is filled and ready."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"bool - Returns true on success else false."),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"releaseOutputStreamBuffer"),"(",Object(a.b)("inlineCode",{parentName:"p"},"streamId"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Lets the audio service know that the buffer is filled and ready."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"streamId")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"OutputStream's  Id whose buffer is being released.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"bool - Returns true on success else false."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"removechild"},"removeChild"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"removeChild"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_pChild"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#removechild"}),"removeChild"))),Object(a.b)("p",null,"Remove a child from the current Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_pChild")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The child Node to remove.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"removefromlayer"},"removeFromLayer"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"removeFromLayer"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_layer"),": bigint): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#removefromlayer"}),"removeFromLayer"))),Object(a.b)("p",null,"Removes this node from the specified node layer."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_layer")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The layer this node will be removed from.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"removeresource"},"removeResource"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"removeResource"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resourceID"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Removes or disassociates the specified resource from the AudioNode.\nA valid AudioNode should have at least one resource associated with it. Hence, if the node has only\none resource it will not be removed and the method will return false."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resourceID")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true, if resource successfully removed.\nfalse, if the node had only one resource in which case it cannot be removed.\nOr if the resource was not associated with the node."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"replaceresource"},"replaceResource"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"replaceResource"),"(",Object(a.b)("inlineCode",{parentName:"p"},"newResourceID"),": bigint, ",Object(a.b)("inlineCode",{parentName:"p"},"oldResourceID?"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Replaces the specified oldResourceID with the new one, newResourceID.\nIf only one resource associated with the node, then the oldResourceID\nparameter is optional. In this case that resource will be replaced with the new one."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"newResourceID")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The new resource to be associated.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"oldResourceID?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = INVALID_RESOURCE_ID"),Object(a.b)("br",null)," The old resource to be disassociated.  @ return true, if the resource was successfully replaced.          false, in the following scenarios:                 1) If the specified old resource is not associated with the node.                 2) If multiple resources are associated and oldResourceID argument not specified.                 3) If this API called before any of the createSoundWithXxxx APIs were called.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"resumesound"},"resumeSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"resumeSound"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Resume the sound if already playing and is paused."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setanchorposition"},"setAnchorPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setAnchorPosition"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_position"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#setanchorposition"}),"setAnchorPosition"))),Object(a.b)("p",null,"Sets the anchor position of the Node's transform. Rotations, scaling, and translations of the\ntransform will take place around this point. Changing the anchor point will recalculate\nthe transform to the new anchor point."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_position")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Anchor position. This is relative to the default 0,0,0 position of the                   transform.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setcursorhoverstate"},"setCursorHoverState"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setCursorHoverState"),"(",Object(a.b)("inlineCode",{parentName:"p"},"state"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#setcursorhoverstate"}),"setCursorHoverState"))),Object(a.b)("p",null,"Set the cursor hover state for this Node."),Object(a.b)("p",null,"Setting this will set the cursor state when this Node\nor any descendant Nodes, that are not explicitly set,\nare hovered over."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"state")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The cursor state")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setlocalposition"},"setLocalPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setLocalPosition"),"(",Object(a.b)("inlineCode",{parentName:"p"},"aPos"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#setlocalposition"}),"setLocalPosition"))),Object(a.b)("p",null,"Set the local position of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"aPos")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"new position")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setlocalrotation"},"setLocalRotation"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setLocalRotation"),"(",Object(a.b)("inlineCode",{parentName:"p"},"aRot"),": ","[number, number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#setlocalrotation"}),"setLocalRotation"))),Object(a.b)("p",null,"Set the local rotation of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"aRot")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"new rotation")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setlocalscale"},"setLocalScale"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setLocalScale"),"(",Object(a.b)("inlineCode",{parentName:"p"},"aScale"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#setlocalscale"}),"setLocalScale"))),Object(a.b)("p",null,"Set the local scale of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"aScale")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"new scale")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setlocaltransform"},"setLocalTransform"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setLocalTransform"),"(",Object(a.b)("inlineCode",{parentName:"p"},"aTransform"),": ","[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#setlocaltransform"}),"setLocalTransform"))),Object(a.b)("p",null,"Set the local transform of this Node"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"aTransform")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"transform matrix")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setname"},"setName"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setName"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_name"),": string): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#setname"}),"setName"))),Object(a.b)("p",null,"Set the name of the Node"),Object(a.b)("p",null,"By default a Node has no name."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_name")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The new name of the Node.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if the name of the Node was successfully set, false otherwise."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setparentedbonename"},"setParentedBoneName"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setParentedBoneName"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_boneName"),": string): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#setparentedbonename"}),"setParentedBoneName"))),Object(a.b)("p",null,"Set the bone in the parent by name that this child will attach to\nThis node must have a parent and the parent must be of type ModelNode."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_boneName")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bone name to attach to")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if successful, false if failed"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setskipraycast"},"setSkipRaycast"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSkipRaycast"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_skipRaycast"),": boolean, ",Object(a.b)("inlineCode",{parentName:"p"},"a_propagateToChildren?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#setskipraycast"}),"setSkipRaycast"))),Object(a.b)("p",null,"Sets the skip raycast state of the node."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_skipRaycast")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Raycast skip flag.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_propagateToChildren?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," Flag to also set the raycast state of any children")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setsoundlooping"},"setSoundLooping"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSoundLooping"),"(",Object(a.b)("inlineCode",{parentName:"p"},"isLooping"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the mode of playing audio in repeat mode. If enabled, audio will play from start\nafter reaching the end, until disabled.\nWhen audio is created, the default is disabled."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"isLooping")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"true enables loop mode.               false disables loop mode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setsoundmute"},"setSoundMute"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSoundMute"),"(",Object(a.b)("inlineCode",{parentName:"p"},"isMuted"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Mute or unmute the sound."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"isMuted")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"true, mute the sound.                false, unmute.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setsoundpitch"},"setSoundPitch"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSoundPitch"),"(",Object(a.b)("inlineCode",{parentName:"p"},"pitch"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets sound pitch."),Object(a.b)("p",null,"  The range of the pitch is 0.5 to 2.0, with 0.5 being one octave down\nand 2.0 being one octave up (i.e., the pitch is a frequency multiple).\nA pitch of 1.0 is the default and means no change."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"pitch")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Pitch value to set. Range 0.5 t0 2.0")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setsoundproperties"},"setSoundProperties"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSoundProperties"),"(",Object(a.b)("inlineCode",{parentName:"p"},"sound"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.sound"}),"Sound"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Similar to createWithSound with a difference that the sound has already\nbeen create using any of the createWithXxxx APIs.\nThis method will set the AudioNodes properties as set in\nthe Sound* parameter."),Object(a.b)("p",null,'NOTE: The stream="false"|"true" and res=<res_id> properties(from XML from which\nthe Sound object was created) will be ignored because the AudioNode was\nalready initialized using either createSoundWithLoadedfile,\ncreateSoundWithStreamedFile or any other createSoundXxxx APIs.'),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.sound"}),"Sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"A Sound object to apply it's properties to this AudioNode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setsoundvolumelinear"},"setSoundVolumeLinear"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSoundVolumeLinear"),"(",Object(a.b)("inlineCode",{parentName:"p"},"volume"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the audio volume."),Object(a.b)("p",null," The range of the volume is 0 to 8, with 0 for silence,\n1 for unity gain, and 8 for 8x gain."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"volume")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Range 0.0f to 8.0f")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsounddirectsendlevels"},"setSpatialSoundDirectSendLevels"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundDirectSendLevels"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"channelSendlevels"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the direct send levels for one channel of a sound output."),Object(a.b)("p",null,"When 3D audio processing is enabled for a sound output (see\nsetSpatialSoundEnabled) this function sets the send\nlevels for the direct component of the sound, i.e., the audio mix\nfor the the part of the sound not affected by room acoustics.\nMulti-channel sounds require the direct send levels to be set\nindividually for each channel by calling this function once for each\nchannel. For mono sounds use channel = 0. For stereo sounds use\nchannel = 0 for left and channel = 1 for right."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"selects the channel whose direct send levels are being set")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channelSendlevels")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"SpatialSoundSendLevels struct to set the levels")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsounddirection"},"setSpatialSoundDirection"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundDirection"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"channelDirection"),": ","[number, number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Set the sound direction of a given audio channel.\nEffective only if spatial sound is enabled (setSpatialSoundEnable) for an audio node.\nThe Direction is relative to this nodes local orientation.\nBy default that is, if this API not called then, the direction is same\nas the the parent nodes orientation.\nWill change the direction even if the audio clip is already playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Channel index(zero based).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channelDirection")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"A quaternion (glm::quat) specifying the direction of the sound for the given channel                          relative to the node's local orientation.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsounddistanceproperties"},"setSpatialSoundDistanceProperties"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundDistanceProperties"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"channelProperties"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.spatialsounddistanceproperties"}),"SpatialSoundDistanceProperties"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null," Set spatial sound distance parameters for a given channel."),Object(a.b)("p",null," @param channel - Channel index(zero based).\n@param channelProperties - spatial sound distance parameters, See struct SpatialSoundDistanceProperties"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channelProperties")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.spatialsounddistanceproperties"}),"SpatialSoundDistanceProperties"))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsoundenable"},"setSpatialSoundEnable"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundEnable"),"(",Object(a.b)("inlineCode",{parentName:"p"},"isEnabled"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Enable\\Disable the capability for spatial sound.\nIf enabled, setSpatialSoundPosition\nmust be called for positional sound to be effective."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"isEnabled")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"true, Enable                    false, Disable")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsoundposition"},"setSpatialSoundPosition"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundPosition"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"channelPosition"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Set the position of a given audio channel relative to this nodes local position.\nEffective only if spatial sound is enabled explicitly for an audio node.\nWill change the position even if the audio clip is already playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Channel index(zero based).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channelPosition")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"A glm::vec3 specifying the offset of channel position                          relative to the node's local position.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsoundradiationproperties"},"setSpatialSoundRadiationProperties"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundRadiationProperties"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"channelProperties"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.spatialsoundradiationproperties"}),"SpatialSoundRadiationProperties"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null," Set spatial sound radiation parameters for a given channel."),Object(a.b)("p",null," @param channel - Channel index(zero based).\n@param channelProperties - spatial sound radiation parameters, See struct SpatialSoundRadiationProperties"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channelProperties")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.spatialsoundradiationproperties"}),"SpatialSoundRadiationProperties"))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setspatialsoundroomsendlevels"},"setSpatialSoundRoomSendLevels"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSpatialSoundRoomSendLevels"),"(",Object(a.b)("inlineCode",{parentName:"p"},"channel"),": number, ",Object(a.b)("inlineCode",{parentName:"p"},"channelSendLevels"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the room send levels for one channel of a sound output."),Object(a.b)("p",null,"When 3D audio processing is enabled for a sound output (see\nsetSpatialSoundEnabled) this function sets the send\nlevels for the room component of the sound, i.e., the audio mix\nfor the the part of the sound that's affected by room acoustics.\nMulti-channel sounds require the room send levels to be set\nindividually for each channel by calling this function once for each\nchannel. For mono sounds use channel = 0. For stereo sounds use\nchannel = 0 for left and channel = 1 for right."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channel")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"selects the channel whose room send levels are being set")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"channelSendLevels")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.spatialsoundsendlevels"}),"SpatialSoundSendLevels")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"SpatialSoundSendLevels struct to set the levels")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setstreamedfileoffset"},"setStreamedFileOffset"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setStreamedFileOffset"),"(",Object(a.b)("inlineCode",{parentName:"p"},"offsetMilliSec"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the starting point for playback of a streamed-file sound."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"offsetMilliSec")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Value for offset in milliseconds.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"settriggerable"},"setTriggerable"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setTriggerable"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_triggerable"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#settriggerable"}),"setTriggerable"))),Object(a.b)("p",null,"Sets whether this node should handle trigger presses directly."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_triggerable")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"true if this node should handle trigger presses directly when focused,                      false if trigger press should instead enter prism placement mode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setvisibilityinherited"},"setVisibilityInherited"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setVisibilityInherited"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_inherit"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#setvisibilityinherited"}),"setVisibilityInherited"))),Object(a.b)("p",null,"Flags that the visibility state of this node should be inherited by its children. This does\nnot change a child's visibility set by setVisible. A visibility of false will take precedence\nover a visibility of true. The tables below show the draw result for various combinations of\nnode visibility and inheritance."),Object(a.b)("pre",null,Object(a.b)("code",b({parentName:"pre"},{}),"         visible     inherit     drawn\nnode  :   false       true        no\nchild :   true          x         no\n\n         visible     inherit     drawn\nnode  :   false       false       no\nchild :   true          x         yes\n\n         visible     inherit     drawn\nnode  :   true        true        yes\nchild :   false         x         no\n\n         visible     inherit     drawn\nnode  :   true        false       yes\nchild :   false         x         no\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_inherit")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Flag that this node's children should inherit its visibility.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setvisible"},"setVisible"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setVisible"),"(",Object(a.b)("inlineCode",{parentName:"p"},"a_visible"),": boolean, ",Object(a.b)("inlineCode",{parentName:"p"},"a_propagateToChildren?"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#setvisible"}),"setVisible"))),Object(a.b)("p",null,"Sets the visibility state of the node."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_visible")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Visibility flag")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"a_propagateToChildren?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = false"),Object(a.b)("br",null)," Flag to also set the visibility state of any children")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"startinput"},"startInput"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"startInput"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Starts capture for a sound input.\nThis method must be called before acquiring audio data in the buffer using getInputBuffer()."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if successful. false on any failure."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"startsound"},"startSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"startSound"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Plays either the only one resource sound associated with the node\nor if more than one resources associated, picks any one of them randomly"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"each time startSound() is called - and plays it.")),Object(a.b)("p",null,"NOTE: If looping is enabled ","[setLooping(true)]"," and multiple resources associated,\nstartSound() will indefinitely play random sequence of all the associated\nsound resources.\nIf only one resource associated, will indefinitely play that one resource\nback to back.\nTo stop playing, call stopSound()."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"startSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"resId"),": bigint): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Plays the sound specified by the audio resource ID. The resource ID must be associated\nprior to this API call."),Object(a.b)("p",null,"Intentionally not adding resource if not already added\\associated with the node\nto avoid accidentally or easily associating too many resources which, has slight\nperformance implications."),Object(a.b)("p",null,"NOTE: If looping is enabled ","[setLooping(true)]"," will indefinitely play the\nspecified resource back to back.\nTo stop playing, call stopSound()."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"resId")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The resource sound to play.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"stopinput"},"stopInput"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"stopInput"),"(): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Stops capture on sound input."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if successful. false on any failure."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"stopsound"},"stopSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"stopSound"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Stops the sound if already playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"stoptransformanimations"},"stopTransformAnimations"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"stopTransformAnimations"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.transformnode#stoptransformanimations"}),"stopTransformAnimations"))),Object(a.b)("p",null,"Stops all current property animations."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"static-delete"},Object(a.b)("inlineCode",{parentName:"h3"},"Static")," Delete"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"Delete"),"(",Object(a.b)("inlineCode",{parentName:"p"},"node"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Inherited from ",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),".",Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node#static-delete"}),"Delete"))),Object(a.b)("p",null,"Client-side only: this static function is used to delete a\nnode with its Prism's deleteNode function."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"node")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"is the node to delete")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"static-releaseinputbuffer"},Object(a.b)("inlineCode",{parentName:"h3"},"Static")," ReleaseInputBuffer"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"ReleaseInputBuffer"),"(",Object(a.b)("inlineCode",{parentName:"p"},"audioId"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Releases the input audio buffer for reuse."),Object(a.b)("p",null,"After receiving a full buffer from getInputBuffer and\nreading the audio data from that buffer, call this function to\nindicate that the buffer has been read and can now be re-used."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"audioId")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"MLHandle used to identify the sound input")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if successful. false on any failure."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"static-playsound"},Object(a.b)("inlineCode",{parentName:"h3"},"Static")," playSound"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"playSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"prism"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.prism"}),"Prism"),", ",Object(a.b)("inlineCode",{parentName:"p"},"sound"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.sound"}),"Sound"),"): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Fire and forget API.\nCreates an AudioNode with the properties from the given Sound and sets a callback to destroy the node when it has finished playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.prism"}),"Prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Prism instance that the created node will belong to.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.sound"}),"Sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Sound instance that contains audio properties for the created AudioNode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the audio node was successfully created, added to the scene and set to delete on play end."),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"playSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"prism"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.prism"}),"Prism"),", ",Object(a.b)("inlineCode",{parentName:"p"},"sound"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.sound"}),"Sound"),", ",Object(a.b)("inlineCode",{parentName:"p"},"pos"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Fire and forget API.\nCreates an AudioNode with the properties from the given Sound and sets a callback to destroy the node when it has finished playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.prism"}),"Prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Prism instance that the created node will belong to.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.sound"}),"Sound")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Sound instance that contains audio properties for the created AudioNode.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"pos")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Position to set to the created AudioNode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the audio node was successfully created, added to the scene and set to delete on play end."),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"playSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"prism"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.prism"}),"Prism"),", ",Object(a.b)("inlineCode",{parentName:"p"},"soundName"),": string): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Fire and forget API.\nCreates an AudioNode with the properties from the given Sound and sets a callback to destroy the node when it has finished playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.prism"}),"Prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Prism instance that the created node will belong to.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"soundName")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"name of a Sound instance that contains audio properties for the created AudioNode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the audio node was successfully created, added to the scene and set to delete on play end."),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"playSound"),"(",Object(a.b)("inlineCode",{parentName:"p"},"prism"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.prism"}),"Prism"),", ",Object(a.b)("inlineCode",{parentName:"p"},"soundName"),": string, ",Object(a.b)("inlineCode",{parentName:"p"},"pos"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Fire and forget API.\nCreates an AudioNode with the properties from the given Sound and sets a callback to destroy the node when it has finished playing."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.prism"}),"Prism")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Prism instance that the created node will belong to.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"soundName")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"string"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"name of a Sound instance that contains audio properties for the created AudioNode.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"pos")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Position to set to the created AudioNode.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"True if the audio node was successfully created, added to the scene and set to delete on play end."))}i.isMDXComponent=!0},812:function(e,t,n){"use strict";n.d(t,"a",(function(){return o})),n.d(t,"b",(function(){return s}));var a=n(0),b=n.n(a),r=b.a.createContext({}),l=function(e){var t=b.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},o=function(e){var t=l(e.components);return b.a.createElement(r.Provider,{value:t},e.children)};var c="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},p=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),p=l(n),s=a,d=p[o+"."+s]||p[s]||i[s]||r;return n?b.a.createElement(d,Object.assign({},{ref:t},c,{components:n})):b.a.createElement(d,Object.assign({},{ref:t},c))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);