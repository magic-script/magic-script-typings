(window.webpackJsonp=window.webpackJsonp||[]).push([[221],{344:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return o}));var a=n(1),r=n(9),b=(n(0),n(539)),l={id:"_lumin_.utils",title:"lumin.utils",sidebar_label:"lumin.utils"},c={id:"modules/_lumin_.utils",title:"lumin.utils",description:"## Index",source:"@site/../docs/modules/_lumin_.utils.md",permalink:"/docs/modules/_lumin_.utils",sidebar_label:"lumin.utils",sidebar:"docs",previous:{title:"lumin.ui.Locale.En",permalink:"/docs/modules/_lumin_.ui.locale.en"},next:{title:"png",permalink:"/docs/modules/_png_"}},i=[{value:"Index",id:"index",children:[{value:"Enumerations",id:"enumerations",children:[]},{value:"Classes",id:"classes",children:[]},{value:"Functions",id:"functions",children:[]}]},{value:"Functions",id:"functions-1",children:[{value:"BuildTexCoords",id:"buildtexcoords",children:[]},{value:"ToAscii",id:"toascii",children:[]},{value:"ToLower",id:"tolower",children:[]},{value:"ToUnicode",id:"tounicode",children:[]},{value:"ToUpper",id:"toupper",children:[]},{value:"Utf32ToUtf8",id:"utf32toutf8",children:[]},{value:"Utf8ToUtf32",id:"utf8toutf32",children:[]}]}],p={rightToc:i};function o(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"index"},"Index"),Object(b.b)("h3",{id:"enumerations"},"Enumerations"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.attributetype"}),"AttributeType")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.filter"}),"Filter")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.format"}),"Format")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.layoutlocation"}),"LayoutLocation")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.lighttype"}),"LightType")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.primitivetype"}),"PrimitiveType")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.shadertype"}),"ShaderType")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.statusdef"}),"StatusDef")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/enums/_lumin_.utils.wrap"}),"Wrap"))),Object(b.b)("h3",{id:"classes"},"Classes"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/classes/_lumin_.utils.callbackid"}),"CallbackID")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/classes/_lumin_.utils.localehelper"}),"LocaleHelper")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/classes/_lumin_.utils.params2d"}),"Params2d")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/classes/_lumin_.utils.params3d"}),"Params3d"))),Object(b.b)("h3",{id:"functions"},"Functions"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#buildtexcoords"}),"BuildTexCoords")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#toascii"}),"ToAscii")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#tolower"}),"ToLower")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#tounicode"}),"ToUnicode")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#toupper"}),"ToUpper")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#utf32toutf8"}),"Utf32ToUtf8")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/modules/_lumin_.utils#utf8toutf32"}),"Utf8ToUtf32"))),Object(b.b)("h2",{id:"functions-1"},"Functions"),Object(b.b)("h3",{id:"buildtexcoords"},"BuildTexCoords"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"BuildTexCoords"),"(",Object(b.b)("inlineCode",{parentName:"p"},"coordsMin"),": ","[number, number]",", ",Object(b.b)("inlineCode",{parentName:"p"},"coordsMax"),": ","[number, number]","): ",Object(b.b)("em",{parentName:"p"},"Array\u2039","[number, number]","\u203a")),Object(b.b)("p",null,"Given the lower-left and upper-right corners of an un-rotated quad,\nbuilds the texture coordinates for rendering it in full."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"coordsMin")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"[number, number]"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Min texture coordinates (lower-left corner).")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"coordsMax")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"[number, number]"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Max texture coordinates (upper-right corner).")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"Array\u2039","[number, number]","\u203a")),Object(b.b)("p",null,"Texture coordinates for rendering the quad geometry."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"toascii"},"ToAscii"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"ToAscii"),"(",Object(b.b)("inlineCode",{parentName:"p"},"unicode"),": string): ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"Truncates all characters to the range of char."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"unicode")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"tolower"},"ToLower"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"ToLower"),"(",Object(b.b)("inlineCode",{parentName:"p"},"str"),": string): ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"Applies std::tolower to every character of the input string."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"str")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string of ASCII characters (UTF-8 doesn't work with this function).")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"a new string containing the characters of str with std::tolower applied."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"tounicode"},"ToUnicode"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"ToUnicode"),"(",Object(b.b)("inlineCode",{parentName:"p"},"ascii"),": string): ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"Converts from ASCII to unicode."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"ascii")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"toupper"},"ToUpper"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"ToUpper"),"(",Object(b.b)("inlineCode",{parentName:"p"},"str"),": string): ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"Applies std::toupper to every character of the input string."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"str")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string of ASCII characters (UTF-8 doesn't work with this function).")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"a new string containing the characters of str with std::toupper applied."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"utf32toutf8"},"Utf32ToUtf8"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"Utf32ToUtf8"),"(",Object(b.b)("inlineCode",{parentName:"p"},"utf32String"),": string): ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"Converts a UTF32 string into the UTF8 equivalent."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"utf32String")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"utf8toutf32"},"Utf8ToUtf32"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"Utf8ToUtf32"),"(",Object(b.b)("inlineCode",{parentName:"p"},"utf8String"),": string): ",Object(b.b)("em",{parentName:"p"},"string")),Object(b.b)("p",null,"Converts a UTF8 string into the UTF32 equivalent."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"utf8String")),Object(b.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string")))}o.isMDXComponent=!0},539:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){b(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},b=Object.keys(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)n=b[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),o=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=o(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,b=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=o(n),j=a,m=u["".concat(l,".").concat(j)]||u[j]||O[j]||b;return n?r.a.createElement(m,c({ref:t},p,{components:n})):r.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=n.length,l=new Array(b);l[0]=j;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var p=2;p<b;p++)l[p]=n[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"}}]);