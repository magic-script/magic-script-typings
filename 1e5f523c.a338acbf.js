(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{261:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return o}));t(58),t(31),t(22),t(23),t(59),t(0);var l=t(812);function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var a={id:"_lumin_.planecastflags",title:"PlanecastFlags",sidebar_label:"PlanecastFlags"},i=[{value:"Enumeration members",id:"enumeration-members",children:[{value:"kAllOrientations",id:"kallorientations",children:[]},{value:"kAllTypes",id:"kalltypes",children:[]},{value:"kArbitrary",id:"karbitrary",children:[]},{value:"kCeiling",id:"kceiling",children:[]},{value:"kFlagInner",id:"kflaginner",children:[]},{value:"kFloor",id:"kfloor",children:[]},{value:"kHorizontal",id:"khorizontal",children:[]},{value:"kIgnoreHoles",id:"kignoreholes",children:[]},{value:"kOrientToGravity",id:"korienttogravity",children:[]},{value:"kVertical",id:"kvertical",children:[]},{value:"kWall",id:"kwall",children:[]}]}],b={rightToc:i},c="wrapper";function o(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,["components"]);return Object(l.b)(c,r({},b,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Used to filter types of planes when doing a plane cast."),Object(l.b)("h2",{id:"enumeration-members"},"Enumeration members"),Object(l.b)("h3",{id:"kallorientations"},"kAllOrientations"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kAllOrientations"),":"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = kVertical|kHorizontal|kArbitrary")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kalltypes"},"kAllTypes"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kAllTypes"),":"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = kCeiling|kFloor|kWall")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"karbitrary"},"kArbitrary"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kArbitrary"),":"),Object(l.b)("p",null,"Include planes with arbitrary normals."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<2")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kceiling"},"kCeiling"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kCeiling"),":"),Object(l.b)("p",null,"Include planes tagged as ceiling."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<6")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kflaginner"},"kFlagInner"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kFlagInner"),":"),Object(l.b)("p",null,"If this flag is set, inner planes will be returned; if it is not\nset, outer planes will be returned."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<4")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kfloor"},"kFloor"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kFloor"),":"),Object(l.b)("p",null,"Include planes tagged as floor."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<7")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"khorizontal"},"kHorizontal"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kHorizontal"),":"),Object(l.b)("p",null,"Include planes whose normal is parallel to gravity."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<1")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kignoreholes"},"kIgnoreHoles"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kIgnoreHoles"),":"),Object(l.b)("p",null,"Instructs the plane system to ignore holes in planar surfaces."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<5")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"korienttogravity"},"kOrientToGravity"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kOrientToGravity"),":"),Object(l.b)("p",null,"For non-horizontal planes, setting this flag will result in the\ntop of the plane rectangle being perpendicular to gravity."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<3")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kvertical"},"kVertical"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kVertical"),":"),Object(l.b)("p",null,"Include planes whose normal is perpendicular to gravity."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<0")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"kwall"},"kWall"),Object(l.b)("p",null,"\u2022 ",Object(l.b)("strong",{parentName:"p"},"kWall"),":"),Object(l.b)("p",null,"Include planes tagged as wall."),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"value = 1<<8")))}o.isMDXComponent=!0},812:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var l=t(0),r=t.n(l),a=r.a.createContext({}),i=function(e){var n=r.a.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):Object.assign({},n,e)),t},b=function(e){var n=i(e.components);return r.a.createElement(a.Provider,{value:n},e.children)};var c="mdxType",o={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=Object(l.forwardRef)((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,b=e.parentName,c=function(e,n){var t={};for(var l in e)Object.prototype.hasOwnProperty.call(e,l)&&-1===n.indexOf(l)&&(t[l]=e[l]);return t}(e,["components","mdxType","originalType","parentName"]),p=i(t),u=l,s=p[b+"."+u]||p[u]||o[u]||a;return t?r.a.createElement(s,Object.assign({},{ref:n},c,{components:t})):r.a.createElement(s,Object.assign({},{ref:n},c))}));function u(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=p;var b={};for(var o in n)hasOwnProperty.call(n,o)&&(b[o]=n[o]);b.originalType=e,b[c]="string"==typeof e?e:l,i[1]=b;for(var u=2;u<a;u++)i[u]=t[u];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);