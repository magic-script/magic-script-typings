(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{139:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return b})),t.d(n,"default",(function(){return p}));var l=t(1),r=t(6),a=(t(0),t(505)),i={id:"_lumin_.planecastflags",title:"lumin.PlanecastFlags",sidebar_label:"lumin.PlanecastFlags"},c={id:"enums/_lumin_.planecastflags",title:"lumin.PlanecastFlags",description:"Used to filter types of planes when doing a plane cast.",source:"@site/../docs/enums/_lumin_.planecastflags.md",permalink:"/docs/enums/_lumin_.planecastflags",sidebar_label:"lumin.PlanecastFlags",sidebar:"docs",previous:{title:"lumin.MediaTrackType",permalink:"/docs/enums/_lumin_.mediatracktype"},next:{title:"lumin.PrismType",permalink:"/docs/enums/_lumin_.prismtype"}},b=[{value:"Enumeration members",id:"enumeration-members",children:[{value:"kAllOrientations",id:"kallorientations",children:[]},{value:"kAllTypes",id:"kalltypes",children:[]},{value:"kArbitrary",id:"karbitrary",children:[]},{value:"kCeiling",id:"kceiling",children:[]},{value:"kFlagInner",id:"kflaginner",children:[]},{value:"kFloor",id:"kfloor",children:[]},{value:"kHorizontal",id:"khorizontal",children:[]},{value:"kIgnoreHoles",id:"kignoreholes",children:[]},{value:"kOrientToGravity",id:"korienttogravity",children:[]},{value:"kVertical",id:"kvertical",children:[]},{value:"kWall",id:"kwall",children:[]}]}],o={rightToc:b};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(l.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Used to filter types of planes when doing a plane cast."),Object(a.b)("h2",{id:"enumeration-members"},"Enumeration members"),Object(a.b)("h3",{id:"kallorientations"},"kAllOrientations"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kAllOrientations"),":"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = kVertical|kHorizontal|kArbitrary")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kalltypes"},"kAllTypes"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kAllTypes"),":"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = kCeiling|kFloor|kWall")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"karbitrary"},"kArbitrary"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kArbitrary"),":"),Object(a.b)("p",null,"Include planes with arbitrary normals."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<2")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kceiling"},"kCeiling"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kCeiling"),":"),Object(a.b)("p",null,"Include planes tagged as ceiling."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<6")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kflaginner"},"kFlagInner"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kFlagInner"),":"),Object(a.b)("p",null,"If this flag is set, inner planes will be returned; if it is not\nset, outer planes will be returned."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<4")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kfloor"},"kFloor"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kFloor"),":"),Object(a.b)("p",null,"Include planes tagged as floor."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<7")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"khorizontal"},"kHorizontal"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kHorizontal"),":"),Object(a.b)("p",null,"Include planes whose normal is parallel to gravity."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<1")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kignoreholes"},"kIgnoreHoles"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kIgnoreHoles"),":"),Object(a.b)("p",null,"Instructs the plane system to ignore holes in planar surfaces."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<5")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"korienttogravity"},"kOrientToGravity"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kOrientToGravity"),":"),Object(a.b)("p",null,"For non-horizontal planes, setting this flag will result in the\ntop of the plane rectangle being perpendicular to gravity."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<3")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kvertical"},"kVertical"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kVertical"),":"),Object(a.b)("p",null,"Include planes whose normal is perpendicular to gravity."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<0")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"kwall"},"kWall"),Object(a.b)("p",null,"\u2022 ",Object(a.b)("strong",{parentName:"p"},"kWall"),":"),Object(a.b)("p",null,"Include planes tagged as wall."),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"value = 1<<8")))}p.isMDXComponent=!0},505:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var l=t(0),r=t.n(l);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=r.a.createContext({}),p=function(e){var n=r.a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},u=function(e){var n=p(e.components);return r.a.createElement(o.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},O=Object(l.forwardRef)((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,o=b(e,["components","mdxType","originalType","parentName"]),u=p(t),O=l,d=u["".concat(i,".").concat(O)]||u[O]||s[O]||a;return t?r.a.createElement(d,c({ref:n},o,{components:t})):r.a.createElement(d,c({ref:n},o))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,i=new Array(a);i[0]=O;var c={};for(var b in n)hasOwnProperty.call(n,b)&&(c[b]=n[b]);c.originalType=e,c.mdxType="string"==typeof e?e:l,i[1]=c;for(var o=2;o<a;o++)i[o]=t[o];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}O.displayName="MDXCreateElement"}}]);