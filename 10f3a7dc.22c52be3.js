(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{149:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return s}));var n=a(1),b=a(9),r=(a(0),a(539)),c={id:"_lumin_.inputhelper",title:"lumin.InputHelper",sidebar_label:"lumin.InputHelper"},l={id:"classes/_lumin_.inputhelper",title:"lumin.InputHelper",description:"## Hierarchy",source:"@site/../docs/classes/_lumin_.inputhelper.md",permalink:"/docs/classes/_lumin_.inputhelper",sidebar_label:"lumin.InputHelper",sidebar:"docs",previous:{title:"lumin.InputEventData",permalink:"/docs/classes/_lumin_.inputeventdata"},next:{title:"lumin.InputHelper.DeviceInfo",permalink:"/docs/classes/_lumin_.inputhelper.deviceinfo"}},i=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods",children:[{value:"getActiveDevices",id:"getactivedevices",children:[]},{value:"getAllPerformedGestures",id:"getallperformedgestures",children:[]},{value:"getDeviceOrientation",id:"getdeviceorientation",children:[]},{value:"getDevicePosition",id:"getdeviceposition",children:[]},{value:"getDeviceType",id:"getdevicetype",children:[]},{value:"getDevicesButtonDown",id:"getdevicesbuttondown",children:[]},{value:"getDevicesButtonPressed",id:"getdevicesbuttonpressed",children:[]},{value:"getDevicesButtonReleased",id:"getdevicesbuttonreleased",children:[]},{value:"getDevicesGesturePerformed",id:"getdevicesgestureperformed",children:[]},{value:"getDownButtons",id:"getdownbuttons",children:[]},{value:"getEyeFixationPosition",id:"geteyefixationposition",children:[]},{value:"getEyeStressInformation",id:"geteyestressinformation",children:[]},{value:"getGestureData",id:"getgesturedata",children:[]},{value:"getLeftEyeInformation",id:"getlefteyeinformation",children:[]},{value:"getLeftHandState",id:"getlefthandstate",children:[]},{value:"getPerformedGesture",id:"getperformedgesture",children:[]},{value:"getPressedButtons",id:"getpressedbuttons",children:[]},{value:"getReleasedButtons",id:"getreleasedbuttons",children:[]},{value:"getRightEyeInformation",id:"getrighteyeinformation",children:[]},{value:"getRightHandState",id:"getrighthandstate",children:[]},{value:"getTouchPadPosition",id:"gettouchpadposition",children:[]},{value:"isButtonDown",id:"isbuttondown",children:[]},{value:"isButtonPressed",id:"isbuttonpressed",children:[]},{value:"isButtonReleased",id:"isbuttonreleased",children:[]},{value:"isDeviceOrientationUpdated",id:"isdeviceorientationupdated",children:[]},{value:"isDevicePositionUpdated",id:"isdevicepositionupdated",children:[]},{value:"isEyeTrackingUpdated",id:"iseyetrackingupdated",children:[]},{value:"isGestureDataUpdated",id:"isgesturedataupdated",children:[]},{value:"isGesturePerformed",id:"isgestureperformed",children:[]},{value:"isLeftHandTrackingUpdated",id:"islefthandtrackingupdated",children:[]},{value:"isRightHandTrackingUpdated",id:"isrighthandtrackingupdated",children:[]},{value:"isTouchPadDown",id:"istouchpaddown",children:[]}]}],p={rightToc:i};function s(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"InputHelper"))),Object(r.b)("h2",{id:"constructors"},"Constructors"),Object(r.b)("h3",{id:"constructor"},"constructor"),Object(r.b)("p",null,"+"," ",Object(r.b)("strong",{parentName:"p"},"new InputHelper"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper"}),"InputHelper"))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper"}),"InputHelper"))),Object(r.b)("h2",{id:"methods"},"Methods"),Object(r.b)("h3",{id:"getactivedevices"},"getActiveDevices"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getActiveDevices"),"(): ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.deviceinfo"}),"DeviceInfo"),"\u203a")),Object(r.b)("p",null,"Returns infomation about the devices that have been used with this client"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.deviceinfo"}),"DeviceInfo"),"\u203a")),Object(r.b)("p",null,"a vector containing the active device information"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getallperformedgestures"},"getAllPerformedGestures"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getAllPerformedGestures"),"(): ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"Returns a map of the gestures performed by all the active devices, mapped by their device IDs"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"the map of devices and gestures"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdeviceorientation"},"getDeviceOrientation"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDeviceOrientation"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number]")),Object(r.b)("p",null,"Returns the orientation of the given device (in world coordinates)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device to retreive the orientation for")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number]")),Object(r.b)("p",null,"the given device's orientation (in world coordinates)"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdeviceposition"},"getDevicePosition"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDevicePosition"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"[number, number, number]")),Object(r.b)("p",null,"Returns the position of the given device (in world coordinates)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device to retreive the position for")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"[number, number, number]")),Object(r.b)("p",null,"the given device's position (in world coordinates)"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdevicetype"},"getDeviceType"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDeviceType"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/enums/_lumin_.input.eventsource"}),"EventSource"))),Object(r.b)("p",null,"Returns the type of a requested device"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/enums/_lumin_.input.eventsource"}),"EventSource"))),Object(r.b)("p",null,"the type of the device"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdevicesbuttondown"},"getDevicesButtonDown"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDevicesButtonDown"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),"): ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,'Returns a list of all the devices that a given key is down on (Note that a button is\nconsidered "down" at any point while it is held)'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,"the list of devices that have the given key down"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdevicesbuttonpressed"},"getDevicesButtonPressed"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDevicesButtonPressed"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),"): ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,'Returns a list of all the devices that a given key has been pressed on this frame (Note\nthat a button is considered "pressed" only on the first frame that it is held, use\nisButtonDown to test if the button is down over multiple frames)'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,"the list of devices that have the given key pressed"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdevicesbuttonreleased"},"getDevicesButtonReleased"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDevicesButtonReleased"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),"): ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,"Returns a list of all the devices that a given key has been released on this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,"the list of devices that have the given key released"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdevicesgestureperformed"},"getDevicesGesturePerformed"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDevicesGesturePerformed"),"(",Object(r.b)("inlineCode",{parentName:"p"},"gesture"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType"),"): ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,"Returns whether ANY device is receiving (or has received) a given gesture this frame and\nalso returns a list of those devices"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"gesture")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the gesture to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039number\u203a")),Object(r.b)("p",null,"a list of devices currently performing the given gesture\nany device, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getdownbuttons"},"getDownButtons"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getDownButtons"),"(): ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"Returns a map of all keys down this frame, mapped by their devices"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"a map of devices to lists of keys that are currently down on\nthat device"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"geteyefixationposition"},"getEyeFixationPosition"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getEyeFixationPosition"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyefixationposition"}),"EyeFixationPosition"))),Object(r.b)("p",null,"Returns the data associated with the fixation of the eyes (in world coordinates)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyefixationposition"}),"EyeFixationPosition"))),Object(r.b)("p",null,"the position of the user's fixation and the confidence in the values given\nby the eye tracking system(ranges from 0.0 to 1.0f), null if eye fixation\ndata doesn't exist"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"geteyestressinformation"},"getEyeStressInformation"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getEyeStressInformation"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyestressinfo"}),"EyeStressInfo"))),Object(r.b)("p",null,"Returns data about potential eye stress"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyestressinfo"}),"EyeStressInfo"))),Object(r.b)("p",null,"data structure of eye stress if it exists\n- isFixationDepthUncomfortable whether or not the users current fixation point\nis too close to them\n- hasDepthViolationOccured whether or not a depth violation has occurred (this\nhappens when a user's fixation point remains too close for too long)\n- remainingAtUncomfortableDistance the number of seconds remaining for a user\nto have their fixation depth at an unacceptable distance before a depth\nviolation occurs\nnull thoerwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getgesturedata"},"getGestureData"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getGestureData"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number, ",Object(r.b)("inlineCode",{parentName:"p"},"gesture"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType"),"): ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.gesturestate"}),"GestureState"),"\u203a")),Object(r.b)("p",null,"Returns the gesture data associated with a given gesture for a given device"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the device to retreive the gesture data for")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"gesture")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the gesture to retrieve the gesture data for")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.gesturestate"}),"GestureState"),"\u203a")),Object(r.b)("p",null,"a list of the gesture data that has been received since it was last\nupdated"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getlefteyeinformation"},"getLeftEyeInformation"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getLeftEyeInformation"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyeinfo"}),"EyeInfo"))),Object(r.b)("p",null,"Returns the data associated with the left eye (in world coordinates)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyeinfo"}),"EyeInfo"))),Object(r.b)("p",null,"data structure of the left eye information if it exists\n- position the position of the left eye\n- rotation the rotation of the left eye\n- confidence the confidence in the values given by the eye tracking system\n(ranges from 0.0 to 1.0f)\n- isBlinking true if the user has their left eye closed, false otherwise\nnull otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getlefthandstate"},"getLeftHandState"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getLeftHandState"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.handstate"}),"HandState"))),Object(r.b)("p",null,"Returns the left hand tracking information"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.handstate"}),"HandState"))),Object(r.b)("p",null,"the left hand tracking information"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getperformedgesture"},"getPerformedGesture"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getPerformedGesture"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType"),"\u203a")),Object(r.b)("p",null,"Returns a list of all gestures performed (or being performed) on a given device this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device for which to retreive the gesture data")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType"),"\u203a")),Object(r.b)("p",null,"the list of gestures performed (or being performed) this frame\ndevice this frame, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getpressedbuttons"},"getPressedButtons"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getPressedButtons"),"(): ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"Returns a map of all keys pressed this frame, mapped by their devices"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"a map of devices to lists of keys that are currently pressed\non that device"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getreleasedbuttons"},"getReleasedButtons"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getReleasedButtons"),"(): ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"Returns a map of all keys released this frame, mapped by their devices"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Object")),Object(r.b)("p",null,"a map of devices to lists of keys released on that device"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getrighteyeinformation"},"getRightEyeInformation"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getRightEyeInformation"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyeinfo"}),"EyeInfo"))),Object(r.b)("p",null,"Returns the data associated with the right eye (in world coordinates)"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.eyeinfo"}),"EyeInfo"))),Object(r.b)("p",null,"data structure of the right eye information if it exists\n- position the position of the right eye\n- rotation the rotation of the right eye\n- confidence the confidence in the values given by the eye tracking system\n(ranges from 0.0 to 1.0f)\n- isBlinking true if the user has their right eye closed, false otherwise\nnull otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getrighthandstate"},"getRightHandState"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getRightHandState"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.handstate"}),"HandState"))),Object(r.b)("p",null,"Returns the right hand tracking information"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.handstate"}),"HandState"))),Object(r.b)("p",null,"the right hand tracking information"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"gettouchpadposition"},"getTouchPadPosition"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getTouchPadPosition"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.touchpadstate"}),"TouchPadState"))),Object(r.b)("p",null,"Returns the touched touchpad position(s) for a given device"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device to retreive the touchpad position for")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.touchpadstate"}),"TouchPadState"))),Object(r.b)("p",null,"the returned touchpad information"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getTouchPadPosition"),"(): ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.touchpadstate"}),"TouchPadState"),"\u203a")),Object(r.b)("p",null,"Returns the touchpad touch information for all active devices that have touchpad information"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(n.a)({parentName:"em"},{href:"/docs/classes/_lumin_.inputhelper.touchpadstate"}),"TouchPadState"),"\u203a")),Object(r.b)("p",null,"touchPadInfo the list of device touchpad information\nreturn true if at least one device with touchpad information exists, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isbuttondown"},"isButtonDown"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isButtonDown"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,'Returns whether a given key is currently down on ANY active device (Note that a button\nis considered "down" at any point while it is held)'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if there is a device has the given key down, false otherwise"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isButtonDown"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),", ",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,'Returns whether a given key is currently down the given device (Note that a button\nis considered "down" at any point while it is held)'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the device to test the keycode on")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given device has the given key down, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isbuttonpressed"},"isButtonPressed"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isButtonPressed"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,'Returns whether a given key has been pressed on ANY active device this frame (Note that\na button is considered "pressed" only on the first frame that it is held, use\nisButtonDown to test if the button is down over multiple frames)'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if there is a device has pressed the given key this frame, false otherwise"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isButtonPressed"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),", ",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,'Returns whether a given key has been pressed on the given device this frame (Note that\na button is considered "pressed" only on the first frame that it is held, use\nisButtonDown to test if the button is down over multiple frames)'),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the device to test the keycode on")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given device has the given key pressed this frame, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isbuttonreleased"},"isButtonReleased"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isButtonReleased"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether a given key has been released on ANY active device this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if there is a device has released the given key this frame, false otherwise"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isButtonReleased"),"(",Object(r.b)("inlineCode",{parentName:"p"},"keycode"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes"),", ",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether a given key has been released on the given device this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"keycode")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.keycodes"}),"KeyCodes")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the code of the key to test")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the device to test the keycode on")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given deivce has released the given key this frame, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isdeviceorientationupdated"},"isDeviceOrientationUpdated"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isDeviceOrientationUpdated"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Checks if the given device's orientation has been updated this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given device has had its orientation updated this frame, false\notherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isdevicepositionupdated"},"isDevicePositionUpdated"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isDevicePositionUpdated"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Checks if the given device's position has been updated this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the ID of the device to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given device has had its position updated this frame, false\notherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"iseyetrackingupdated"},"isEyeTrackingUpdated"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isEyeTrackingUpdated"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether or not new eye tracking information has been received this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if new eye tracking information has been received this frame, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isgesturedataupdated"},"isGestureDataUpdated"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isGestureDataUpdated"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number, ",Object(r.b)("inlineCode",{parentName:"p"},"gesture"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether new data for a gesture has been received this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the device to check the gesture data for")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"gesture")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the gesture to check the gesture data for")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if this device exists, has data for the given gesture and that data has been\nupdated this frame, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isgestureperformed"},"isGesturePerformed"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isGesturePerformed"),"(",Object(r.b)("inlineCode",{parentName:"p"},"gesture"),": ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether ANY device is receiving (or has received) a given gesture this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"gesture")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(n.a)({parentName:"td"},{href:"/docs/enums/_lumin_.input.gesturetype"}),"GestureType")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"the gesture to test")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given gesture has been received (or is being received) this frame by\nany device, false otherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"islefthandtrackingupdated"},"isLeftHandTrackingUpdated"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isLeftHandTrackingUpdated"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether or not new left hand tracking information has been received this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if new left hand tracking information has been received this frame, false\notherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isrighthandtrackingupdated"},"isRightHandTrackingUpdated"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isRightHandTrackingUpdated"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether or not new right hand tracking information has been received this frame"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if new right hand tracking information has been received this frame, false\notherwise"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"istouchpaddown"},"isTouchPadDown"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isTouchPadDown"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether ANY active device's touchpad is currently being used"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if there is a device whose touchpad is being used, false otherwise"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isTouchPadDown"),"(",Object(r.b)("inlineCode",{parentName:"p"},"deviceID"),": number): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether the given device's touchpad is currently being used"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"deviceID")),Object(r.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"number")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the given device exists and has its touchpad being used"))}s.isMDXComponent=!0},539:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return d}));var n=a(0),b=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,b=function(e,t){if(null==e)return{};var a,n,b={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(b[a]=e[a]);return b}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(b[a]=e[a])}return b}var p=b.a.createContext({}),s=function(e){var t=b.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},o=function(e){var t=s(e.components);return b.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},O=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),o=s(a),O=n,d=o["".concat(c,".").concat(O)]||o[O]||u[O]||r;return a?b.a.createElement(d,l({ref:t},p,{components:a})):b.a.createElement(d,l({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,c=new Array(r);c[0]=O;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var p=2;p<r;p++)c[p]=a[p];return b.a.createElement.apply(null,c)}return b.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);