(window.webpackJsonp=window.webpackJsonp||[]).push([[198],{321:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return o}));var b=n(1),a=n(9),r=(n(0),n(539)),l={id:"_lumin_.node",title:"lumin.Node",sidebar_label:"lumin.Node"},c={id:"classes/_lumin_.node",title:"lumin.Node",description:'Node - Fundamental Object that is used to represent a "Node" in a Prism',source:"@site/../docs/classes/_lumin_.node.md",permalink:"/docs/classes/_lumin_.node",sidebar_label:"lumin.Node",sidebar:"docs",previous:{title:"lumin.NamedInputEventData",permalink:"/docs/classes/_lumin_.namedinputeventdata"},next:{title:"lumin.Notification",permalink:"/docs/classes/_lumin_.notification"}},i=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Methods",id:"methods",children:[{value:"addChild",id:"addchild",children:[]},{value:"addToLayer",id:"addtolayer",children:[]},{value:"findChild",id:"findchild",children:[]},{value:"findChildren",id:"findchildren",children:[]},{value:"findParent",id:"findparent",children:[]},{value:"getAABB",id:"getaabb",children:[]},{value:"getAnchorPosition",id:"getanchorposition",children:[]},{value:"getChild",id:"getchild",children:[]},{value:"getChildCount",id:"getchildcount",children:[]},{value:"getCurrentPrismTransform",id:"getcurrentprismtransform",children:[]},{value:"getCurrentWorldTransform",id:"getcurrentworldtransform",children:[]},{value:"getCursorHoverState",id:"getcursorhoverstate",children:[]},{value:"getLocalAABB",id:"getlocalaabb",children:[]},{value:"getLocalTransform",id:"getlocaltransform",children:[]},{value:"getName",id:"getname",children:[]},{value:"getNodeId",id:"getnodeid",children:[]},{value:"getParent",id:"getparent",children:[]},{value:"getParentedBoneName",id:"getparentedbonename",children:[]},{value:"getPrismId",id:"getprismid",children:[]},{value:"getRoot",id:"getroot",children:[]},{value:"isInLayer",id:"isinlayer",children:[]},{value:"isInSubtree",id:"isinsubtree",children:[]},{value:"isSkipRaycast",id:"isskipraycast",children:[]},{value:"isTriggerable",id:"istriggerable",children:[]},{value:"isVisibilityInherited",id:"isvisibilityinherited",children:[]},{value:"isVisible",id:"isvisible",children:[]},{value:"isVisibleInPrism",id:"isvisibleinprism",children:[]},{value:"removeChild",id:"removechild",children:[]},{value:"removeFromLayer",id:"removefromlayer",children:[]},{value:"setCursorHoverState",id:"setcursorhoverstate",children:[]},{value:"setName",id:"setname",children:[]},{value:"setParentedBoneName",id:"setparentedbonename",children:[]},{value:"setSkipRaycast",id:"setskipraycast",children:[]},{value:"setTriggerable",id:"settriggerable",children:[]},{value:"setVisibilityInherited",id:"setvisibilityinherited",children:[]},{value:"setVisible",id:"setvisible",children:[]},{value:"<code>Static</code> Delete",id:"static-delete",children:[]}]}],p={rightToc:i};function o(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(b.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,'Node - Fundamental Object that is used to represent a "Node" in a Prism'),Object(r.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},Object(r.b)("strong",{parentName:"p"},"Node")),Object(r.b)("p",{parentName:"li"},"\u21b3 ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/classes/_lumin_.transformnode"}),"TransformNode")))),Object(r.b)("h2",{id:"methods"},"Methods"),Object(r.b)("h3",{id:"addchild"},"addChild"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"addChild"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_pChild"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Adds a child to the current Node, removing it from its current parent."),Object(r.b)("p",null,"A child can only have a single Parent"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_pChild")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The Node to add as a child to this Node.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if successful, false if failed"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"addtolayer"},"addToLayer"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"addToLayer"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_layer"),": bigint): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Adds this node to the specified node layer.  Nodes can be members of multiple layers."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_layer")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"bigint"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"findchild"},"findChild"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"findChild"),"(",Object(r.b)("inlineCode",{parentName:"p"},"name"),": string): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"Find the first named child in the node hierarchy, including this Node."),Object(r.b)("p",null,"Does a breadth-first search of the child node hierarchy\nfor the specified named Node and will return the first encountered match,\nor nullptr if no named Node found."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"name")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The name to search for.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("hr",null),Object(r.b)("h3",{id:"findchildren"},"findChildren"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"findChildren"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_type"),": number, ",Object(r.b)("inlineCode",{parentName:"p"},"a_bExactType?"),": boolean, ",Object(r.b)("inlineCode",{parentName:"p"},"a_bIncludeSelf?"),": boolean): ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),"\u203a")),Object(r.b)("p",null,"Does a breadth-first search of the child node hierarchy\nfor the specified Node type."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_type")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The type of Node to find in the child hierarchy.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_bExactType?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"default = false"),Object(r.b)("br",null)," Flag to indicate if the child node must be the exact type or can be derived from the type (default false).")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_bIncludeSelf?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"default = false"),Object(r.b)("br",null)," Flag to indicate if the search should include this Node (default false).")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"Array\u2039",Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"),"\u203a")),Object(r.b)("p",null,"A vector of Node pointers containing the results."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"findparent"},"findParent"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"findParent"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_type"),": number, ",Object(r.b)("inlineCode",{parentName:"p"},"a_bExactType?"),": boolean): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"Searches up the tree parentage for the specific Node type."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_type")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The type of Node to find in the parent hierarchy.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_bExactType?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"default = false"),Object(r.b)("br",null)," Flag to indicate if the parent node must be the exact type or can be derived from the type (default false).")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"The parent node, if found, null if not found."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getaabb"},"getAABB"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getAABB"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(r.b)("p",null,"Get the AABB of this Node's full hierarchy, including all descendants,\nwith all Node transforms applied."),Object(r.b)("p",null,"The returned AABB encompasses this Node and all descendant Nodes\nand is aligned to the coordinate system the Node resides within,\ni.e. the Node's parent coordinate system.\nNote, the returned AABB is not guaranteed to be the minimal,\ntightest fitting AABB to encompass the Node's descendant hierarchy,\nbut it will fully enlose the Node's hierarchy."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(r.b)("p",null,"The bounding box"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getanchorposition"},"getAnchorPosition"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getAnchorPosition"),"(): ",Object(r.b)("em",{parentName:"p"},"[number, number, number]")),Object(r.b)("p",null,"Returns the anchor position of the node."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"[number, number, number]")),Object(r.b)("p",null,"The anchor position."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getchild"},"getChild"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getChild"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_iIndex"),": number): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"Gets the n'th child from this Node's children"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_iIndex")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"number"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The index of the child.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"Child Node"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getchildcount"},"getChildCount"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getChildCount"),"(): ",Object(r.b)("em",{parentName:"p"},"number")),Object(r.b)("p",null,"Gets the number of immediate children this Node has"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"number")),Object(r.b)("p",null,"Count of immediate child Nodes"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getcurrentprismtransform"},"getCurrentPrismTransform"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getCurrentPrismTransform"),"(): ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(r.b)("p",null,"Get the Cached Prism Transform of this Node"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(r.b)("p",null,"Transform Matrix"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getcurrentworldtransform"},"getCurrentWorldTransform"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getCurrentWorldTransform"),"(): ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(r.b)("p",null,"Get the Cached World Transform of this Node"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(r.b)("p",null,"Transform Matrix"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getcursorhoverstate"},"getCursorHoverState"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getCursorHoverState"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState"))),Object(r.b)("p",null,"Get the cursor hover state for this Node."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState"))),Object(r.b)("p",null,"the cursor state."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getlocalaabb"},"getLocalAABB"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getLocalAABB"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(r.b)("p",null,"Get the local AABB of this Node only, not including children,\naligned to this Node's local coordinate system."),Object(r.b)("p",null,"A local AABB of math::AABB::EMPTY indicates the Node either\nhas no visual information or that local AABB is not supported\nfor the Node."),Object(r.b)("p",null,"Note:  The local AABB for ModelNodes is currently not supported\nand will report math::AABB::EMPTY."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.math.aabb"}),"AABB"))),Object(r.b)("p",null,"The bounding box."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getlocaltransform"},"getLocalTransform"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getLocalTransform"),"(): ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(r.b)("p",null,"Get the Local Transform of this Node"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"[number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]")),Object(r.b)("p",null,"Transform Matrix"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getname"},"getName"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getName"),"(): ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"Get the name of the Node."),Object(r.b)("p",null,"This call returns EMPTY_STRING if the Node's\nname has not been set."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"The name of the Node, if set."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getnodeid"},"getNodeId"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getNodeId"),"(): ",Object(r.b)("em",{parentName:"p"},"bigint")),Object(r.b)("p",null,"Gets the Node Id of this Node"),Object(r.b)("p",null,"Every Node is assigned a unique ID per Prism"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"bigint")),Object(r.b)("p",null,"Node id of the current Node"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getparent"},"getParent"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getParent"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"Gets this Node's immediate parent"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(r.b)("p",null,"Parent Node, nullptr = no parent"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getparentedbonename"},"getParentedBoneName"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getParentedBoneName"),"(): ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"When parented to a parents bone with setParentedBoneName"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"string")),Object(r.b)("p",null,"Parents bone name we are attached to"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getprismid"},"getPrismId"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getPrismId"),"(): ",Object(r.b)("em",{parentName:"p"},"bigint")),Object(r.b)("p",null,"Returns the id of the prism the node belongs to."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"bigint")),Object(r.b)("p",null,"the prism id (0 = invalid prism)"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"getroot"},"getRoot"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"getRoot"),"(): ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.rootnode"}),"RootNode"))),Object(r.b)("p",null,"Gets the root node of the node tree this node belongs to."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},Object(r.b)("a",Object(b.a)({parentName:"em"},{href:"/docs/classes/_lumin_.rootnode"}),"RootNode"))),Object(r.b)("p",null,"The root node, or nullptr if none."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isinlayer"},"isInLayer"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isInLayer"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_layer"),": bigint): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Checks to see if node subscribes to the specified node layer."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_layer")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"bigint"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The layer to test if this node is a member of.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"True if this node subscribes to the specified layer."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isinsubtree"},"isInSubtree"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isInSubtree"),"(",Object(r.b)("inlineCode",{parentName:"p"},"pParent"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Determines if this Node is within the subtree."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"pParent")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node"))))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if this Node is within the subtree, false if not."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isskipraycast"},"isSkipRaycast"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isSkipRaycast"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns the skip raycast state of the node."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"True if the node is skipped during raycasting."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"istriggerable"},"isTriggerable"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isTriggerable"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns true if this node should handle trigger presses directly."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if this node will handle trigger presses directly when focused,\nfalse if trigger press will instead enter prism placement mode."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isvisibilityinherited"},"isVisibilityInherited"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isVisibilityInherited"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns whether this Node's visibility is inherited by its children or not."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"True if the Node's visiblity is inherited."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isvisible"},"isVisible"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isVisible"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns the visibility state of the node. Note that only the local state is checked, the\neffect of a parent's visibility is ignored."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"True if the Node is visible."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"isvisibleinprism"},"isVisibleInPrism"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"isVisibleInPrism"),"(): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Returns the visibility of the Node in the hierarchy based on self visibility and any\npotential inherited visibility."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"True if the Node is visible in the Prism."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"removechild"},"removeChild"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"removeChild"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_pChild"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Remove a child from the current Node"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_pChild")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The child Node to remove.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"removefromlayer"},"removeFromLayer"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"removeFromLayer"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_layer"),": bigint): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Removes this node from the specified node layer."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_layer")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"bigint"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The layer this node will be removed from.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setcursorhoverstate"},"setCursorHoverState"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setCursorHoverState"),"(",Object(r.b)("inlineCode",{parentName:"p"},"state"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Set the cursor hover state for this Node."),Object(r.b)("p",null,"Setting this will set the cursor state when this Node\nor any descendant Nodes, that are not explicitly set,\nare hovered over."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"state")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/enums/_lumin_.cursorhoverstate"}),"CursorHoverState")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The cursor state")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setname"},"setName"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setName"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_name"),": string): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Set the name of the Node"),Object(r.b)("p",null,"By default a Node has no name."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_name")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The new name of the Node.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if the name of the Node was successfully set, false otherwise."),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setparentedbonename"},"setParentedBoneName"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setParentedBoneName"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_boneName"),": string): ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"Set the bone in the parent by name that this child will attach to\nThis node must have a parent and the parent must be of type ModelNode."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_boneName")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"bone name to attach to")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"boolean")),Object(r.b)("p",null,"true if successful, false if failed"),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setskipraycast"},"setSkipRaycast"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setSkipRaycast"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_skipRaycast"),": boolean, ",Object(r.b)("inlineCode",{parentName:"p"},"a_propagateToChildren?"),": boolean): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Sets the skip raycast state of the node."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_skipRaycast")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Raycast skip flag.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_propagateToChildren?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"default = false"),Object(r.b)("br",null)," Flag to also set the raycast state of any children")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"settriggerable"},"setTriggerable"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setTriggerable"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_triggerable"),": boolean): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Sets whether this node should handle trigger presses directly."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_triggerable")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"true if this node should handle trigger presses directly when focused,                      false if trigger press should instead enter prism placement mode.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setvisibilityinherited"},"setVisibilityInherited"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setVisibilityInherited"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_inherit"),": boolean): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Flags that the visibility state of this node should be inherited by its children. This does\nnot change a child's visibility set by setVisible. A visibility of false will take precedence\nover a visibility of true. The tables below show the draw result for various combinations of\nnode visibility and inheritance."),Object(r.b)("pre",null,Object(r.b)("code",Object(b.a)({parentName:"pre"},{}),"         visible     inherit     drawn\nnode  :   false       true        no\nchild :   true          x         no\n\n         visible     inherit     drawn\nnode  :   false       false       no\nchild :   true          x         yes\n\n         visible     inherit     drawn\nnode  :   true        true        yes\nchild :   false         x         no\n\n         visible     inherit     drawn\nnode  :   true        false       yes\nchild :   false         x         no\n")),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_inherit")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Flag that this node's children should inherit its visibility.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"setvisible"},"setVisible"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"setVisible"),"(",Object(r.b)("inlineCode",{parentName:"p"},"a_visible"),": boolean, ",Object(r.b)("inlineCode",{parentName:"p"},"a_propagateToChildren?"),": boolean): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Sets the visibility state of the node."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_visible")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Visibility flag")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"a_propagateToChildren?")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"default = false"),Object(r.b)("br",null)," Flag to also set the visibility state of any children")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("hr",null),Object(r.b)("h3",{id:"static-delete"},Object(r.b)("inlineCode",{parentName:"h3"},"Static")," Delete"),Object(r.b)("p",null,"\u25b8 ",Object(r.b)("strong",{parentName:"p"},"Delete"),"(",Object(r.b)("inlineCode",{parentName:"p"},"node"),": ",Object(r.b)("a",Object(b.a)({parentName:"p"},{href:"/docs/classes/_lumin_.node"}),"Node"),"): ",Object(r.b)("em",{parentName:"p"},"void")),Object(r.b)("p",null,"Client-side only: this static function is used to delete a\nnode with its Prism's deleteNode function."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},Object(r.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Parameters:")),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"node")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(r.b)("a",Object(b.a)({parentName:"td"},{href:"/docs/classes/_lumin_.node"}),"Node")),Object(r.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"is the node to delete")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Returns:")," ",Object(r.b)("em",{parentName:"p"},"void")))}o.isMDXComponent=!0},539:function(e,t,n){"use strict";n.d(t,"a",(function(){return O})),n.d(t,"b",(function(){return s}));var b=n(0),a=n.n(b);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,b)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,b,a=function(e,t){if(null==e)return{};var n,b,a={},r=Object.keys(e);for(b=0;b<r.length;b++)n=r[b],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(b=0;b<r.length;b++)n=r[b],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),o=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},O=function(e){var t=o(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},j=Object(b.forwardRef)((function(e,t){var n=e.components,b=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),O=o(n),j=b,s=O["".concat(l,".").concat(j)]||O[j]||m[j]||r;return n?a.a.createElement(s,c({ref:t},p,{components:n})):a.a.createElement(s,c({ref:t},p))}));function s(e,t){var n=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var r=n.length,l=new Array(r);l[0]=j;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:b,l[1]=c;for(var p=2;p<r;p++)l[p]=n[p];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}j.displayName="MDXCreateElement"}}]);