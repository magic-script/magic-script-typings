(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{528:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return i}));n(58),n(31),n(22),n(23),n(59),n(0);var a=n(812);function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={id:"_lumin_.physicsrigidbody",title:"PhysicsRigidBody",sidebar_label:"PhysicsRigidBody"},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods",children:[{value:"addShape",id:"addshape",children:[]},{value:"applyForce",id:"applyforce",children:[]},{value:"applyForceAtPos",id:"applyforceatpos",children:[]},{value:"applyLocalForceAtPos",id:"applylocalforceatpos",children:[]},{value:"applyTorque",id:"applytorque",children:[]},{value:"clearColliderFlag",id:"clearcolliderflag",children:[]},{value:"clearCollidesWithFlag",id:"clearcollideswithflag",children:[]},{value:"clearForce",id:"clearforce",children:[]},{value:"clearTorque",id:"cleartorque",children:[]},{value:"getAngularDamping",id:"getangulardamping",children:[]},{value:"getAngularVelocity",id:"getangularvelocity",children:[]},{value:"getBodyType",id:"getbodytype",children:[]},{value:"getCenterOfMass",id:"getcenterofmass",children:[]},{value:"getColliderFlags",id:"getcolliderflags",children:[]},{value:"getCollidesWithFlags",id:"getcollideswithflags",children:[]},{value:"getInertiaTensor",id:"getinertiatensor",children:[]},{value:"getLinearDamping",id:"getlineardamping",children:[]},{value:"getLinearVelocity",id:"getlinearvelocity",children:[]},{value:"getMass",id:"getmass",children:[]},{value:"getMaxAngularVelocity",id:"getmaxangularvelocity",children:[]},{value:"getSleepThreshold",id:"getsleepthreshold",children:[]},{value:"isColliderFlagSet",id:"iscolliderflagset",children:[]},{value:"isCollidesWithFlagSet",id:"iscollideswithflagset",children:[]},{value:"lockAxes",id:"lockaxes",children:[]},{value:"node",id:"node",children:[]},{value:"removeShape",id:"removeshape",children:[]},{value:"setAngularDamping",id:"setangulardamping",children:[]},{value:"setAngularVelocity",id:"setangularvelocity",children:[]},{value:"setBodyType",id:"setbodytype",children:[]},{value:"setCenterOfMass",id:"setcenterofmass",children:[]},{value:"setColliderFlag",id:"setcolliderflag",children:[]},{value:"setColliderFlags",id:"setcolliderflags",children:[]},{value:"setCollidesWithFlag",id:"setcollideswithflag",children:[]},{value:"setCollidesWithFlags",id:"setcollideswithflags",children:[]},{value:"setEnableCCD",id:"setenableccd",children:[]},{value:"setIgnoreGravity",id:"setignoregravity",children:[]},{value:"setInertiaTensor",id:"setinertiatensor",children:[]},{value:"setLinearDamping",id:"setlineardamping",children:[]},{value:"setLinearVelocity",id:"setlinearvelocity",children:[]},{value:"setMass",id:"setmass",children:[]},{value:"setMaxAngularVelocity",id:"setmaxangularvelocity",children:[]},{value:"setSleepThreshold",id:"setsleepthreshold",children:[]}]}],p={rightToc:l},c="wrapper";function i(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,b={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(b[n]=e[n]);return b}(e,["components"]);return Object(a.b)(c,b({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Defines the mass and movement properties of a physics object. A rigid body has no inherent shape,\none or more PhysicsShapes need to be added to it."),Object(a.b)("p",null,"A rigid body is one of 3 types: static, kinematic, or dynamic\nstatic : The body never moves.\nkinematic : The body can be moved by external systems, such as animation, but is not\naffected by forces or collisions.\ndynamic : The body is affected by forces and collisions."),Object(a.b)("p",null,"It is important that apart from their initial position, static and dynamic bodies should not\nhave their positions changed by calls to setLocalPosition, etc. This will cause unexpected\nresults in the simulation."),Object(a.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"PhysicsRigidBody"))),Object(a.b)("h2",{id:"constructors"},"Constructors"),Object(a.b)("h3",{id:"constructor"},"constructor"),Object(a.b)("p",null,"+"," ",Object(a.b)("strong",{parentName:"p"},"new PhysicsRigidBody"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.physicsrigidbody"}),"PhysicsRigidBody"))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.physicsrigidbody"}),"PhysicsRigidBody"))),Object(a.b)("h2",{id:"methods"},"Methods"),Object(a.b)("h3",{id:"addshape"},"addShape"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"addShape"),"(",Object(a.b)("inlineCode",{parentName:"p"},"shape"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/classes/_lumin_.physicsshape"}),"PhysicsShape"),", ",Object(a.b)("inlineCode",{parentName:"p"},"position?"),": ","[number, number, number]",", ",Object(a.b)("inlineCode",{parentName:"p"},"rotation?"),": ","[number, number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"bigint")),Object(a.b)("p",null,"Adds a shape to the body. A shape may not be added to the body after it has been added to a Prism."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"shape")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/classes/_lumin_.physicsshape"}),"PhysicsShape")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"The shape to add.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"position?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = VEC3_ZERO"),Object(a.b)("br",null)," Offset from the body's location to place the shape.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"rotation?")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"default = QUAT_IDENTITY"),Object(a.b)("br",null)," Rotation of the shape relative to the body's orientation.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"bigint")),Object(a.b)("p",null,"Id of the shape for the body. INVALID_PHYSICS_ID if the shape was not added."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"applyforce"},"applyForce"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"applyForce"),"(",Object(a.b)("inlineCode",{parentName:"p"},"type"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType"),", ",Object(a.b)("inlineCode",{parentName:"p"},"force"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Applies a force to the body. The force will only be applied for the current frame; to apply a\ncontinuous force, this function must be called every frame."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Type of force to apply (force or impulse).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"force")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Amount of force. Units depend on the force type.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"applyforceatpos"},"applyForceAtPos"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"applyForceAtPos"),"(",Object(a.b)("inlineCode",{parentName:"p"},"type"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType"),", ",Object(a.b)("inlineCode",{parentName:"p"},"force"),": ","[number, number, number]",", ",Object(a.b)("inlineCode",{parentName:"p"},"pos"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Applies a force to the body at a given position. If the force is not at the center of mass, this\nwill result in a torque being applied to the body as well. Both the force and position are in\nvolume-space reference frame. The force will only be applied for the current frame; to apply a\ncontinuous force, this function must be called every frame."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Type of force to apply (force or impulse).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"force")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Amount of force. Units depend on the force type.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"pos")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Position to apply the force")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"applylocalforceatpos"},"applyLocalForceAtPos"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"applyLocalForceAtPos"),"(",Object(a.b)("inlineCode",{parentName:"p"},"type"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType"),", ",Object(a.b)("inlineCode",{parentName:"p"},"force"),": ","[number, number, number]",", ",Object(a.b)("inlineCode",{parentName:"p"},"pos"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Applies a force to the body at a given position. If the force is not at the center of mass, this\nwill result in a torque being applied to the body as well. Both the force and position are in\nlocal-space of the body reference frame. The force will only be applied for the current frame;\nto apply a continuous force, this function must be called every frame."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Type of force to apply (force or impulse).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"force")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Amount of force. Units depend on the force type.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"pos")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Position to apply the force")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"applytorque"},"applyTorque"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"applyTorque"),"(",Object(a.b)("inlineCode",{parentName:"p"},"type"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType"),", ",Object(a.b)("inlineCode",{parentName:"p"},"force"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Applies a torque to the body. The torque will only be applied for the current frame; to apply a\ncontinuous torque, this function must be called every frame."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.forcetype"}),"ForceType")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Type of torque to apply (force or impulse).")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"force")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Amount of torque. Units depend on the force type.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"clearcolliderflag"},"clearColliderFlag"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"clearColliderFlag"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flag"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Clears a single collider flag for the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flag")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Collider flag, in the range of 0 - 31.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"clearcollideswithflag"},"clearCollidesWithFlag"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"clearCollidesWithFlag"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flag"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Clears a single collides with flag for the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flag")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Collides with flag, in the range of 0 - 31.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"clearforce"},"clearForce"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"clearForce"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Clears all linear forces on the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"cleartorque"},"clearTorque"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"clearTorque"),"(): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Clears all angular forces on the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getangulardamping"},"getAngularDamping"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getAngularDamping"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns angular damping coefficient being applied to the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Damping"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getangularvelocity"},"getAngularVelocity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getAngularVelocity"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Returns the angular velocity of the body, in rad/sec."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"velocity"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getbodytype"},"getBodyType"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getBodyType"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/enums/_lumin_.physics.rigidbodytype"}),"RigidBodyType"))),Object(a.b)("p",null,"Returns the rigid body type (static/kinematic/dynamic)."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/enums/_lumin_.physics.rigidbodytype"}),"RigidBodyType"))),Object(a.b)("p",null,"The body type."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getcenterofmass"},"getCenterOfMass"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getCenterOfMass"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Returns the center of mass of the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Center of mass."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getcolliderflags"},"getColliderFlags"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getColliderFlags"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns the collider flags for the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"The collider flags."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getcollideswithflags"},"getCollidesWithFlags"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getCollidesWithFlags"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns the collides with flags for the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"The collides with flags."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getinertiatensor"},"getInertiaTensor"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getInertiaTensor"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Returns the inertia tensor of the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Inertia tensor."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlineardamping"},"getLinearDamping"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLinearDamping"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns linear damping coefficient being applied to the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Damping"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getlinearvelocity"},"getLinearVelocity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getLinearVelocity"),"(): ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"Returns the linear velocity of the body, in meter/sec."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"[number, number, number]")),Object(a.b)("p",null,"velocity"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getmass"},"getMass"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getMass"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns the mass of the rigid body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Mass, in kilograms."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getmaxangularvelocity"},"getMaxAngularVelocity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getMaxAngularVelocity"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns the maximum angular velocity of the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Max velocity"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"getsleepthreshold"},"getSleepThreshold"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"getSleepThreshold"),"(): ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Returns the sleep threshold of the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"number")),Object(a.b)("p",null,"Threshold"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"iscolliderflagset"},"isColliderFlagSet"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isColliderFlagSet"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flag"),": number): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Returns if a given collider flag is set."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flag")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Flag value, in the range of 0 - 31.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if the flag is set."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"iscollideswithflagset"},"isCollidesWithFlagSet"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"isCollidesWithFlagSet"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flag"),": number): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Returns if a given collides with flag is set."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flag")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Flag value, in the range of 0 - 31.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if the flag is set."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"lockaxes"},"lockAxes"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"lockAxes"),"(",Object(a.b)("inlineCode",{parentName:"p"},"linear"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.axislock"}),"AxisLock"),", ",Object(a.b)("inlineCode",{parentName:"p"},"angular"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.axislock"}),"AxisLock"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Prevents motion on the given axes. Values can be or'ed together to prevent motion on multiple axes."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"linear")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.axislock"}),"AxisLock")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Linear axes to lock")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"angular")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.axislock"}),"AxisLock")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Angular axes to lock")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"node"},"node"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"node"),"(): ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,"Get the Node this RigidBody is attached to."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},Object(a.b)("a",b({parentName:"em"},{href:"/docs/classes/_lumin_.node"}),"Node"))),Object(a.b)("p",null,"the Node pointer."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"removeshape"},"removeShape"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"removeShape"),"(",Object(a.b)("inlineCode",{parentName:"p"},"id"),": bigint): ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"Removes a shape from the body. A shape may not be removed from the body after it has been added to a Prism."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"id")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"bigint"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Id of the shape to remove.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"boolean")),Object(a.b)("p",null,"true if the shape was removed"),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setangulardamping"},"setAngularDamping"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setAngularDamping"),"(",Object(a.b)("inlineCode",{parentName:"p"},"damping"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets angular damping coefficient being applied to the body. This can be used to simulate things\nlike rolling friction."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"damping")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Damping coefficient")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setangularvelocity"},"setAngularVelocity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setAngularVelocity"),"(",Object(a.b)("inlineCode",{parentName:"p"},"velocity"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the angular velocity of the body, in rad/sec."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"velocity")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setbodytype"},"setBodyType"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setBodyType"),"(",Object(a.b)("inlineCode",{parentName:"p"},"type"),": ",Object(a.b)("a",b({parentName:"p"},{href:"/docs/enums/_lumin_.physics.rigidbodytype"}),"RigidBodyType"),"): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the rigid body type (static/kinematic/dynamic). Changing this may result in the loss of\ndata for the body in the simulation. The preferred way to change the body type is to remove\nthe body from its volume, change the type, and re-add to the volume."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"type")),Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("a",b({parentName:"td"},{href:"/docs/enums/_lumin_.physics.rigidbodytype"}),"RigidBodyType"))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"The body type."),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setcenterofmass"},"setCenterOfMass"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setCenterOfMass"),"(",Object(a.b)("inlineCode",{parentName:"p"},"com"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the center of mass of the body. Note setting it outside the body's area as defined by\nthe shapes attached to it may result in an unstable simulation."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"com")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Center of mass")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setcolliderflag"},"setColliderFlag"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setColliderFlag"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flag"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets a single collider flag for the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flag")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Collider flag, in the range of 0 - 31.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setcolliderflags"},"setColliderFlags"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setColliderFlags"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flags"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the collider flags for the body. If the collider flags of one body anded with the\ncollides with flags of another body is 0, the bodies will not collide."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flags")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Collider flags.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setcollideswithflag"},"setCollidesWithFlag"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setCollidesWithFlag"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flag"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets a single collides with flag for the body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flag")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Collides with flag, in the range of 0 - 31.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setcollideswithflags"},"setCollidesWithFlags"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setCollidesWithFlags"),"(",Object(a.b)("inlineCode",{parentName:"p"},"flags"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the collides with flags for the body. If the collider flags of one body anded with the\ncollides with flags of another body is 0, the bodies will not collide."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"flags")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Collides with flags.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setenableccd"},"setEnableCCD"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setEnableCCD"),"(",Object(a.b)("inlineCode",{parentName:"p"},"enable"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,'Enable/disable continuous collision detection (CCD) for this body. Enabling CCD can be used to\nprevent a body from "tunneling" through another due to it moving too fast.'),Object(a.b)("p",null,"IMPORTANT: Physics must have been enabled with the solverType initialization data set to\nkFastNormal or kFastFast for this to have an effect."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"enable")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Flag to enable CCD on the body.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setignoregravity"},"setIgnoreGravity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setIgnoreGravity"),"(",Object(a.b)("inlineCode",{parentName:"p"},"ignore"),": boolean): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Flags the body as ignoring gravity."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"ignore")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"boolean"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"If true, the body won't be affected by gravity.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setinertiatensor"},"setInertiaTensor"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setInertiaTensor"),"(",Object(a.b)("inlineCode",{parentName:"p"},"tensor"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the inertia tensor of the body. A value of 0 is the equivalent of infinite inertia on\nthe axis."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"tensor")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Inertia tensor.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setlineardamping"},"setLinearDamping"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setLinearDamping"),"(",Object(a.b)("inlineCode",{parentName:"p"},"damping"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets linear damping coefficient being applied to the body. This can be used to simulate things\nlike air resistance."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"damping")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Damping coefficient")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setlinearvelocity"},"setLinearVelocity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setLinearVelocity"),"(",Object(a.b)("inlineCode",{parentName:"p"},"velocity"),": ","[number, number, number]","): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the linear velocity of the body, in meter/sec."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"velocity")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"[number, number, number]"),Object(a.b)("td",b({parentName:"tr"},{align:null}))))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setmass"},"setMass"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setMass"),"(",Object(a.b)("inlineCode",{parentName:"p"},"massKg"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the mass of the rigid body."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"massKg")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Mass, in kilograms. Must be > 0.")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setmaxangularvelocity"},"setMaxAngularVelocity"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setMaxAngularVelocity"),"(",Object(a.b)("inlineCode",{parentName:"p"},"velocity"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the maximum angular velocity of the body. This helps keep the simulation stable; it can become\nunstable if the object rotates too fast."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"velocity")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Max velocity")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("hr",null),Object(a.b)("h3",{id:"setsleepthreshold"},"setSleepThreshold"),Object(a.b)("p",null,"\u25b8 ",Object(a.b)("strong",{parentName:"p"},"setSleepThreshold"),"(",Object(a.b)("inlineCode",{parentName:"p"},"threshold"),": number): ",Object(a.b)("em",{parentName:"p"},"void")),Object(a.b)("p",null,"Sets the sleep threshold of the body. This controls when the body is marked to be stopped\nsimulating due to lack of motion."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},Object(a.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Parameters:")),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",b({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Type"),Object(a.b)("th",b({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",b({parentName:"tr"},{align:null}),Object(a.b)("inlineCode",{parentName:"td"},"threshold")),Object(a.b)("td",b({parentName:"tr"},{align:null}),"number"),Object(a.b)("td",b({parentName:"tr"},{align:null}),"Sleep threshold value")))),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Returns:")," ",Object(a.b)("em",{parentName:"p"},"void")))}i.isMDXComponent=!0},812:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),b=n.n(a),r=b.a.createContext({}),l=function(e){var t=b.a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},p=function(e){var t=l(e.components);return b.a.createElement(r.Provider,{value:t},e.children)};var c="mdxType",i={inlineCode:"code",wrapper:function(e){var t=e.children;return b.a.createElement(b.a.Fragment,{},t)}},o=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),o=l(n),m=a,O=o[p+"."+m]||o[m]||i[m]||r;return n?b.a.createElement(O,Object.assign({},{ref:t},c,{components:n})):b.a.createElement(O,Object.assign({},{ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=o;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[c]="string"==typeof e?e:a,l[1]=p;for(var m=2;m<r;m++)l[m]=n[m];return b.a.createElement.apply(null,l)}return b.a.createElement.apply(null,n)}o.displayName="MDXCreateElement"}}]);