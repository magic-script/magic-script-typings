(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{312:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return l}));var r=n(1),a=n(9),c=(n(0),n(543)),b={id:"_lumin_.raycastquadnoderesult",title:"lumin.RaycastQuadNodeResult",sidebar_label:"lumin.RaycastQuadNodeResult"},s={id:"classes/_lumin_.raycastquadnoderesult",title:"lumin.RaycastQuadNodeResult",description:"Raycast result for quad node intersections.",source:"@site/../docs/classes/_lumin_.raycastquadnoderesult.md",permalink:"/docs/classes/_lumin_.raycastquadnoderesult",sidebar_label:"lumin.RaycastQuadNodeResult",sidebar:"docs",previous:{title:"lumin.RaycastNodeResult",permalink:"/docs/classes/_lumin_.raycastnoderesult"},next:{title:"lumin.RaycastResult",permalink:"/docs/classes/_lumin_.raycastresult"}},o=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods",children:[{value:"getDistance",id:"getdistance",children:[]},{value:"getHitFront",id:"gethitfront",children:[]},{value:"getNodeId",id:"getnodeid",children:[]},{value:"getNormal",id:"getnormal",children:[]},{value:"getPointHit",id:"getpointhit",children:[]},{value:"getPrismId",id:"getprismid",children:[]},{value:"getTransitionNodeId",id:"gettransitionnodeid",children:[]},{value:"getTransitionNodePrismId",id:"gettransitionnodeprismid",children:[]},{value:"getUV",id:"getuv",children:[]},{value:"<code>Static</code> Create",id:"static-create",children:[]}]}],i={rightToc:o};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Raycast result for quad node intersections."),Object(c.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(c.b)("p",null,"  \u21b3 ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult")),Object(c.b)("p",null,"  \u21b3 ",Object(c.b)("strong",{parentName:"p"},"RaycastQuadNodeResult")),Object(c.b)("h2",{id:"constructors"},"Constructors"),Object(c.b)("h3",{id:"constructor"},"constructor"),Object(c.b)("p",null,"+"," ",Object(c.b)("strong",{parentName:"p"},"new RaycastQuadNodeResult"),"(): ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastquadnoderesult"}),"RaycastQuadNodeResult"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Overrides ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult#constructor"}),"constructor"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastquadnoderesult"}),"RaycastQuadNodeResult"))),Object(c.b)("h2",{id:"methods"},"Methods"),Object(c.b)("h3",{id:"getdistance"},"getDistance"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getDistance"),"(): ",Object(c.b)("em",{parentName:"p"},"number")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult"}),"RaycastResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult#getdistance"}),"getDistance"))),Object(c.b)("p",null,"Returns the distance (in meters) from the raycast source to the intersected object.\n(if 0, source is inside or just touching the object)"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"number")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"gethitfront"},"getHitFront"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getHitFront"),"(): ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,'Return true if the intersection hit the "front" (+z) side of the quad'),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"getnodeid"},"getNodeId"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getNodeId"),"(): ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult#getnodeid"}),"getNodeId"))),Object(c.b)("p",null,"Returns the ID of the Node that was intersected by a raycast"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"getnormal"},"getNormal"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getNormal"),"(): ",Object(c.b)("em",{parentName:"p"},"[number, number, number]")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult"}),"RaycastResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult#getnormal"}),"getNormal"))),Object(c.b)("p",null,"Normal vector at the intersection point. Note not all raycasts support generating normals, so\nthis value should be checked for a 0-length vector before using."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"[number, number, number]")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"getpointhit"},"getPointHit"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getPointHit"),"(): ",Object(c.b)("em",{parentName:"p"},"[number, number, number]")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult"}),"RaycastResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult#getpointhit"}),"getPointHit"))),Object(c.b)("p",null,"Returns the point in prism coordinates where the ray intersection occurred"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"[number, number, number]")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"getprismid"},"getPrismId"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getPrismId"),"(): ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult"}),"RaycastResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastresult#getprismid"}),"getPrismId"))),Object(c.b)("p",null,"Returns the prism that was intersected by a raycast."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"gettransitionnodeid"},"getTransitionNodeId"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getTransitionNodeId"),"(): ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult#gettransitionnodeid"}),"getTransitionNodeId"))),Object(c.b)("p",null,"Returns the ID of the Node transitioning between enter/exit states."),Object(c.b)("p",null,"This is the previous raycast hit node on cursor enter and the upcoming\nraycast hit node on cursor exit"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"gettransitionnodeprismid"},"getTransitionNodePrismId"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getTransitionNodePrismId"),"(): ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult#gettransitionnodeprismid"}),"getTransitionNodePrismId"))),Object(c.b)("p",null,"Returns the Prism ID of the Node transitioning between enter/exit states."),Object(c.b)("p",null,"This is the previous raycast hit node's Prism on cursor enter and the upcoming\nraycast hit node's Prism on cursor exit"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"bigint")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"getuv"},"getUV"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"getUV"),"(): ",Object(c.b)("em",{parentName:"p"},"[number, number]")),Object(c.b)("p",null,"Return normalized ray intersection on the node"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},Object(c.b)("inlineCode",{parentName:"strong"},"priv"))," none"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"[number, number]")),Object(c.b)("hr",null),Object(c.b)("h3",{id:"static-create"},Object(c.b)("inlineCode",{parentName:"h3"},"Static")," Create"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"Create"),"(): ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"))),Object(c.b)("p",null,Object(c.b)("em",{parentName:"p"},"Inherited from ",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"),".",Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult#static-create"}),"Create"))),Object(c.b)("p",null,"Factory"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(r.a)({parentName:"em"},{href:"/docs/classes/_lumin_.raycastnoderesult"}),"RaycastNodeResult"))))}l.isMDXComponent=!0},543:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=a.a.createContext({}),l=function(e){var t=a.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},u=function(e){var t=l(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,b=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(b,".").concat(m)]||u[m]||p[m]||c;return n?a.a.createElement(d,s({ref:t},i,{components:n})):a.a.createElement(d,s({ref:t},i))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,b=new Array(c);b[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,b[1]=s;for(var i=2;i<c;i++)b[i]=n[i];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);